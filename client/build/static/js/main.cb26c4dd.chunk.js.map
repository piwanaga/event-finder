{"version":3,"sources":["actions/actionTypes.js","secrets.js","TMApi.js","actions/actionCreators.js","components/AttractionCard.js","components/AttractionCardList.js","components/FavoriteArtistsHome.js","components/Home.js","components/RegisterForm.js","components/FavoriteArtistsProfile.js","components/Profile.js","components/AttractionCardSmall.js","components/AttractionSearchResults.js","components/EventCard.js","components/EventSearchResults.js","components/SearchResults.js","components/AttractionDetail.js","components/EventFilters.js","components/Discover.js","components/LoginForm.js","components/RoutesComponent.js","components/Search.js","components/Header.js","components/Footer.js","components/App.js","reportWebVitals.js","reducers/searchReducer.js","reducers/attractionsReducer.js","reducers/userReducer.js","reducers/rootReducer.js","components/ScrollToTop.js","index.js"],"names":["CREATE_USER","GET_USER","LOGIN_USER","LOGIN_ERROR","CLEAR_LOGIN_ERROR","UPDATE_USER","LOGOUT_USER","SEARCH_EVENTS","SEARCH_USERS","CLEAR_SEARCH_USERS","LOAD_MORE","SEARCH_ATTRACTIONS","GET_ATTRACTIONS","GET_ATTRACTION_DETAILS","GET_EVENT_DETAIL","ADD_ARTIST","REMOVE_ARTIST","API_KEY","BASE_URL","TMApi","endpoint","params","includes","replace","url","axios","method","apikey","data","console","error","response","location","postalCode","city","this","request","size","res","id","classification","classificationName","link","process","createdUser","user","type","loginUser","dispatch","a","post","headers","localStorage","setItem","JSON","stringify","token","loggedInUser","log","loginError","loggedOutUser","gotUser","addedArtist","artist","removeArtist","delete","username","removedArtist","searchEvents","searchResults","searchAttractionsResults","moreResults","results","gotAttractions","attractions","gotAttractionDetails","attractionDetails","AttractionCard","name","img","eventCount","className","to","src","alt","AttractionCardList","title","useDispatch","navigate","useNavigate","getImage","images","idx","findIndex","element","width","onClick","toLowerCase","pathname","search","handleSeeAll","map","upcomingEvents","_total","FavoriteArtistsHome","artists","photoUrl","Home","useSelector","store","attractionsReducer","attractionsHome","userReducer","storedToken","getItem","useEffect","jwt","decode","parse","get","getAttractions","musicRes","sportsRes","filmRes","artsAndTheatreRes","music","_embedded","sports","films","artsAndTheatre","loggedIn","Object","keys","length","RegisterForm","timeout","useState","email","password","firstName","lastName","usernameError","passwordError","firstNameError","lastNameError","formData","setFormData","clearTimeout","handleChange","evt","target","value","onSubmit","preventDefault","validForm","validateForm","createUser","setTimeout","htmlFor","maxLength","onChange","FavoriteArtistsProfile","handleUnfollow","Profile","AttractionCardSmall","segment","genre","AttractionSearchResults","attractionId","attractionName","searchReducer","classifications","EventCard","date","time","venue","ticketUrl","dayjs","format","href","rel","EventSearchResults","loadMoreLink","events","useLocation","queryString","keyword","e","dates","start","localDate","localTime","venues","loadMore","SearchResults","activeLink","setActiveLink","AttractionDetail","useParams","isFollowing","setIsFollowing","attraction","details","getAttractionDetails","handleFollow","icon","faHeartSolid","faHeartRegular","EventFilters","startDateTime","sort","radius","INITIAL_STATE","filterData","setFilterData","placeholder","Discover","capitalizeFirstLetter","str","split","reduce","acc","test","charAt","toUpperCase","slice","LoginForm","isLoading","setIsLoading","emailError","handleSubmit","disabled","RoutesComponent","path","Search","searchAttractions","faMagnifyingGlass","Header","navbarOpen","setNavbarOpen","handleLogout","removeItem","handleClick","faBars","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eventDetail","users","state","action","_links","next","filter","rootReducer","combineReducers","ScrollToTop","window","scrollTo","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb26c4dd.chunk.js","sourcesContent":["/**Action types for reducer actions */\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CLEAR_LOGIN_ERROR = 'CLEAR_LOGIN_ERROR';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const SEARCH_EVENTS = 'SEARCH_EVENTS';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const CLEAR_SEARCH_USERS = 'CLEAR_SEARCH_USERS';\r\nexport const LOAD_MORE = 'LOAD_MORE';\r\nexport const SEARCH_ATTRACTIONS = 'SEARCH_ATTRACTIONS';\r\nexport const GET_ATTRACTIONS = 'GET_ATTRACTIONS';\r\nexport const GET_ATTRACTION_DETAILS = 'GET_ATTRACTION_DETAILS';\r\nexport const GET_EVENT_DETAIL = 'GET_EVENT_DETAIL';\r\nexport const ADD_ARTIST = 'ADD_ARTIST';\r\nexport const REMOVE_ARTIST = 'REMOVE_ARTIST';\r\n","export const API_KEY = 'sY0V0bcC0RC1F9yjSh1wrBB70hXSQswG'","import axios from 'axios';\r\nimport { API_KEY } from './secrets';\r\n\r\nconst BASE_URL = 'https://app.ticketmaster.com/discovery/v2';\r\n\r\nclass TMApi {\r\n    static async request(endpoint, params={}) {\r\n        let url \r\n        if (endpoint.includes('discovery')) {\r\n            endpoint = endpoint.replace('/discovery/v2', '')\r\n            url = `${BASE_URL}/${endpoint}`\r\n        } else {\r\n            url = `${BASE_URL}/${endpoint}.json`\r\n        }\r\n\r\n        try {\r\n          return (await axios({ url, method: 'get', params: {...params, apikey: API_KEY} })).data;\r\n        } catch (err) {\r\n          console.error(\"API Error:\", err.response);\r\n        }\r\n    };\r\n\r\n    static async searchEvents(data) {\r\n        let params = {...data}\r\n        if (data.location) {\r\n            if ( +data.location ) {\r\n                params.postalCode = data.location\r\n            } else {\r\n                params.city = data.location\r\n            };\r\n            delete params.location\r\n        };\r\n        \r\n        const res = await this.request('events', { ...params, size: 10 });\r\n        return res;\r\n    };\r\n\r\n    static async searchAttractions(data) {\r\n        let params = {...data}\r\n        \r\n        const res = await this.request('attractions', { ...params, size: 50 });\r\n        return res;\r\n    };\r\n\r\n    static async getEventDetail(id) {\r\n        const res = await this.request(`events/${id}`);\r\n        return res;\r\n    };\r\n\r\n    static async getAttractions(classification) {\r\n        const res = await this.request('attractions', {classificationName: classification, size: 8});\r\n        return res;\r\n    };\r\n\r\n    static async loadMore(link) {\r\n        const res = await this.request(link)\r\n        return res;\r\n    };\r\n\r\n    static async getAttractionDetails(id) {\r\n        const res = await this.request(`attractions/${id}`);\r\n        return res;\r\n    };\r\n};\r\n\r\nexport default TMApi;","import axios from 'axios';\r\nimport { \r\n        CREATE_USER, \r\n        LOGIN_USER, \r\n        LOGIN_ERROR,\r\n        CLEAR_LOGIN_ERROR,\r\n        GET_USER, \r\n        UPDATE_USER, \r\n        LOGOUT_USER, \r\n        SEARCH_EVENTS, \r\n        LOAD_MORE, \r\n        SEARCH_ATTRACTIONS,\r\n        GET_ATTRACTIONS, \r\n        GET_ATTRACTION_DETAILS, \r\n        ADD_ARTIST, \r\n        REMOVE_ARTIST, \r\n        GET_EVENT_DETAIL\r\n       } \r\n       from './actionTypes';\r\nimport jwt from 'jsonwebtoken';\r\nimport TMApi from '../TMApi';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\r\n\r\n/**USER ACTIONS\r\n * - create new user\r\n * - login user\r\n * - logout user\r\n * - update user\r\n * - get user (using token in local storage)\r\n */\r\n\r\n/**Create new user\r\n * - make request to backend with user data\r\n * - store token in localStorage\r\n */\r\nexport const createUser = user => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/register`, user);\r\n            localStorage.setItem('token', JSON.stringify(res.data.token));\r\n            dispatch(createdUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst createdUser = user => {\r\n    return {\r\n        type: CREATE_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**Login user\r\n//  * - store token in loalStorage\r\n//  */\r\nexport const loginUser = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/login`, data, \r\n            {headers: \r\n                {'Content-Type': 'application/json'}\r\n            });\r\n            localStorage.setItem('token', JSON.stringify(res.data.token));\r\n            dispatch(loggedInUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            dispatch(loginError()) \r\n        };\r\n    };\r\n};\r\n\r\nconst loggedInUser = user => {\r\n    return {\r\n        type: LOGIN_USER,\r\n        user\r\n    };\r\n};\r\n\r\nconst loginError = () => {\r\n    return {\r\n        type: LOGIN_ERROR,\r\n        error: true\r\n    }\r\n}\r\n\r\nexport const clearLoginError = () => {\r\n    return {\r\n        type: CLEAR_LOGIN_ERROR\r\n    };\r\n};\r\n\r\n// /**Logout user\r\n//  * - remove token from localStorage\r\n//  */\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('token');\r\n        dispatch(loggedOutUser());\r\n    };\r\n};\r\n\r\nconst loggedOutUser = () => {\r\n    return {\r\n        type: LOGOUT_USER,\r\n    };\r\n};\r\n\r\n// /**Get user details\r\n//  * - decode token in localStorage to get username\r\n//  * - make request to backend to get user object\r\n//  */\r\nexport const getUser = token => {\r\n    return async dispatch => {\r\n        try {\r\n            const { username } = jwt.decode(JSON.parse(token));\r\n            const res = await axios.get(`${BASE_URL}/users/${username}`);\r\n            dispatch(gotUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        }\r\n    };\r\n};\r\n\r\nconst gotUser = user => {\r\n    return {\r\n        type: GET_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**Update user\r\n//  * - make patch request to backend and update redux store\r\n//  */\r\nexport const updateUser = (username, data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.patch(`${BASE_URL}/users/${username}`, data);\r\n            dispatch(updatedUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst updatedUser = user => {\r\n    return {\r\n        type: UPDATE_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**USER FRIENDS AND ARTISTS AND ACTIONS\r\n//  *  - add/remove artist from following\r\n//  *  - add/remove friend\r\n//  */\r\n\r\n//  /**Add artist\r\n//   * - make post request to backend with artist data\r\n//   */\r\nexport const addArtist = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/${data.username}/artists`, data);\r\n            dispatch(addedArtist(res.data.artist))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst addedArtist = artist => {\r\n    return {\r\n        type: ADD_ARTIST,\r\n        artist\r\n    };\r\n};\r\n\r\nexport const removeArtist = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.delete(`${BASE_URL}/users/${data.username}/artists`, {data});\r\n            dispatch(removedArtist(res.data.id));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst removedArtist = id => {\r\n    return {\r\n        type: REMOVE_ARTIST,\r\n        id\r\n    };\r\n};\r\n\r\n/**Search actions \r\n * - handle search\r\n * - load more results\r\n*/\r\n\r\n/**Search events\r\n * - call our TMApi class method with provided search data\r\n */\r\nexport const searchEvents = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.searchEvents(data);\r\n            dispatch(searchResults(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };   \r\n};\r\n\r\nconst searchResults = (searchResults) => {\r\n    return {\r\n        type: SEARCH_EVENTS,\r\n        searchResults\r\n    };\r\n};\r\n\r\nexport const searchAttractions = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.searchAttractions(data);\r\n            dispatch(searchAttractionsResults(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };   \r\n};\r\n\r\nconst searchAttractionsResults = (searchAttractionsResults) => {\r\n    return {\r\n        type: SEARCH_ATTRACTIONS,\r\n        searchAttractionsResults\r\n    };\r\n};\r\n\r\n/**Load more events\r\n * - we don't want to load all search results on inital request, so loadMore will get the next set of results on request\r\n * - calls TMApi class method for loading more events\r\n */\r\nexport const loadMore = link => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.loadMore(link)\r\n            dispatch(moreResults(res))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst moreResults = results => {\r\n    return {\r\n        type: LOAD_MORE,\r\n        results\r\n    };\r\n};\r\n\r\n/**Get event details\r\n * - call TMApi class method with event id to get event details\r\n */\r\nexport const getEventDetail = id => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.getEventDetail(id);\r\n            dispatch(gotEventDetail(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst gotEventDetail = eventDetail => {\r\n    return {\r\n        type: GET_EVENT_DETAIL,\r\n        eventDetail\r\n    };\r\n};\r\n\r\n/**Search users\r\n * - search any registered users by username\r\n * - make ge request to backend search route\r\n */\r\n// export const searchUsers = username => {\r\n//     return async dispatch => {\r\n//         try {\r\n//             const res = await axios.get(`${BASE_URL}/users/search/${username}`);\r\n//             dispatch(searchUsersResults(res.data.users));\r\n//         } catch (e) {\r\n//             console.log(e);\r\n//             return e;\r\n//         };\r\n//     };\r\n// };\r\n\r\n// const searchUsersResults = users => {\r\n//     return {\r\n//         type: SEARCH_USERS,\r\n//         users\r\n//     };\r\n// };\r\n\r\n// /**Clear search results */\r\n// export const clearSearchUsers = () => {\r\n//     return {\r\n//         type: CLEAR_SEARCH_USERS\r\n//     };\r\n// };\r\n\r\n/**ATTRACTIONS ACTIONS\r\n * - get attractions for homepage\r\n * - get attraction details\r\n */\r\n\r\n/**Get attractions for homepage\r\n * - get attractions for four main classifications to be displayed on homepage: music, sports, film, arts & theatre\r\n * - call getAttractions class method for each classification and add to attractions object to be added to redux store\r\n */\r\nexport const getAttractions = () => {\r\n    return async dispatch => {\r\n        try {\r\n        let attractions = {}\r\n            const musicRes = await TMApi.getAttractions('music');\r\n            const sportsRes = await TMApi.getAttractions('sports');\r\n            const filmRes = await TMApi.getAttractions('film');\r\n            const artsAndTheatreRes = await TMApi.getAttractions('arts&theatre');\r\n\r\n        attractions.music = musicRes._embedded.attractions\r\n        attractions.sports = sportsRes._embedded.attractions\r\n        attractions.films = filmRes._embedded.attractions\r\n        attractions.artsAndTheatre = artsAndTheatreRes._embedded.attractions\r\n        \r\n        dispatch(gotAttractions(attractions))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst gotAttractions = attractions => {\r\n    return {\r\n        type: GET_ATTRACTIONS,\r\n        attractions\r\n    };\r\n};\r\n\r\n/**Get attraction details\r\n * - using attraction id, call TMApi class method to get attraction details\r\n */\r\nexport const getAttractionDetails = id => {\r\n    return async dispatch => {\r\n        const res = await TMApi.getAttractionDetails(id);\r\n        dispatch(gotAttractionDetails(res));\r\n    };\r\n};\r\n\r\nconst gotAttractionDetails = (attractionDetails=null) => {\r\n    return {\r\n        type: GET_ATTRACTION_DETAILS,\r\n        attractionDetails\r\n    };\r\n};","/**Card displayed on homepage that shows attraction name, image and event count\r\n * - rendered by AttractionCardList\r\n */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AttractionCard = ({ name, img, id, eventCount }) => {\r\n   \r\n    return (\r\n        <div className='relative w-full rounded group h-28 overflow-hidden sm:h-44 md:h-32 xl:h-48'>\r\n            <Link to={`/attraction/${id}`}>\r\n                <img src={img} alt={`${name}`} className='h-full w-full object-cover transition-transform duration-500 ease-in-out transform group-hover:scale-110' />\r\n                <div className='absolute bottom-0 bg-gray-900 bg-opacity-40 text-white rounded ml-2 mb-2 p-2'>\r\n                    <p className='font-semibold text-sm sm:text-base'>{name}</p>\r\n                    <p className='text-xs sm:text-sm'>{eventCount} events</p>\r\n                </div>\r\n                </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttractionCard;","/**Groups top attractions per classification on homepage\r\n * - displays title of classification and link to events\r\n */\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchEvents } from '../actions/actionCreators';\r\nimport AttractionCard from './AttractionCard';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AttractionCardList = ({ title, attractions }) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSeeAll = title => {\r\n        if (title === 'Arts & Theatre') title = 'arts&theatre';\r\n        dispatch(searchEvents({classificationName: title.toLowerCase()}));\r\n        navigate({\r\n            pathname: '/discover',\r\n            search: `?classificationName=${title.toLowerCase()}`\r\n        });   \r\n    };\r\n\r\n    const getImage = images => {\r\n        const isCorrectSize = element => element.width === 640\r\n        const idx = images.findIndex(isCorrectSize)\r\n        return images[idx].url\r\n    }\r\n\r\n    return (\r\n        <div className='w-full flex flex-col'>\r\n            <div>\r\n                <div className='flex justify-between'>\r\n                    <div className='mb-4 text-xl'>\r\n                        <h3 className='font-semibold'>{title}</h3>\r\n                    </div>\r\n                    <div>\r\n                        <button \r\n                            onClick={() => handleSeeAll(title)}\r\n                            className='text-sm text-blue-500 font-semibold transition-colors duration-200 ease-in-out hover:text-blue-600'\r\n                        >\r\n                            See All {title}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className='grid grid-cols-2 gap-2 md:grid-cols-4'>\r\n                    {attractions.map(a => (\r\n                                <AttractionCard \r\n                                    name={a.name} \r\n                                    img={getImage(a.images)} \r\n                                    eventCount={a.upcomingEvents._total}\r\n                                    id={a.id}\r\n                                    key={a.id}\r\n                                />\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttractionCardList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FavoriteArtistsHome = ({ artists }) => {\r\n    return (\r\n        <div className='w-full flex flex-col'>\r\n            <div>\r\n                <div className='mb-4 text-2xl'>\r\n                    <h3 className='font-semibold'>My Artists</h3>\r\n                </div>\r\n                <div className='w-full md:grid md:grid-cols-2 md:gap-2'>\r\n                    {artists.map(a => (\r\n                        <Link to={`/attraction/${a.id}`} key={a.id}>\r\n                            <div className='w-full border rounded flex items-center justify-between transition-colors duration-200 ease-in-out mb-2 py-2 px-2 hover:shadow-xl hover:text-blue-600'>\r\n                                <div className='flex items-center'>\r\n                                    <div className=''>\r\n                                        <img alt={a.name} src={a.photoUrl} className='w-16 rounded mr-4 md:mr-10'/>\r\n                                    </div>\r\n                                    <div className='pr-4'>\r\n                                        <p className='text-sm sm:text-base font-semibold'>{a.name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavoriteArtistsHome;","/**Homepage\r\n * - renders AttractionCardList\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { getUser, getAttractions } from '../actions/actionCreators';\r\nimport AttractionCardList from './AttractionCardList';\r\nimport FavoriteArtistsHome from './FavoriteArtistsHome';\r\n// import EventsSearchResultsHome from './EventSearchResultsHome';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const attractions = useSelector(store => store.attractionsReducer.attractionsHome);\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const storedToken = localStorage.getItem('token') || null;\r\n\r\n    useEffect(() => {\r\n        if (storedToken) {\r\n          dispatch(getUser(storedToken));\r\n        };\r\n        // getLocation()\r\n        dispatch(getAttractions());\r\n      }, [storedToken, dispatch, user.loggedIn]);\r\n\r\n    return (\r\n        <div className='flex justify-center w-full'>\r\n            <div className='px-3 flex flex-col w-full lg:w-5/6 xl:w-2/3'>\r\n                <div className='flex flex-col'>\r\n                    <h3 className='text-2xl font-semibold mb-6'>Top Selling</h3>\r\n                    {Object.keys(attractions).map(a => (\r\n                        <div key={a} className='mb-10 w-full'>\r\n                            <AttractionCardList title={attractions[a].title} attractions={attractions[a].attractions} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div>\r\n                    {user.artists ? \r\n                        user.artists.length ?\r\n                            <div className='mb-10 w-full'>\r\n                                <FavoriteArtistsHome artists={user.artists}/>\r\n                            </div> :\r\n                            null :\r\n                        null\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","/**Register form */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createUser } from '../actions/actionCreators';\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    let timeout\r\n\r\n    const INITIAL_STATE = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        usernameError: '',\r\n        passwordError: '',\r\n        firstNameError: '',\r\n        lastNameError: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    useEffect(() => {\r\n        if (user.loggedIn) {\r\n            navigate('/')\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [user.loggedIn, navigate, timeout])\r\n\r\n    const validateForm = () => {\r\n        let validForm = true\r\n        if (!formData.email) {\r\n          setFormData(data => ({\r\n            ...data, usernameError: 'Email cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n          setFormData(data => ({\r\n            ...data, usernameError: ''\r\n          }))\r\n        }\r\n        if (!formData.password) {\r\n          setFormData(data => ({\r\n            ...data, passwordError: 'Password cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, passwordError: ''\r\n            }))\r\n        }\r\n        if (!formData.firstName) {\r\n          setFormData(data => ({\r\n            ...data, firstNameError: 'First name cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, firstNameError: ''\r\n            }))\r\n        }\r\n        if (!formData.lastName) {\r\n          setFormData(data => ({\r\n            ...data, lastNameError: 'Last name cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, lastNameError: ''\r\n            }))\r\n        }\r\n        return validForm\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFormData(data => ({...data, [name]: value}));\r\n    };\r\n\r\n    const checkCredentials = () => {\r\n        timeout = setTimeout(() => {\r\n            if (!user.loggedIn) {\r\n                setFormData(data => ({\r\n                    ...data, usernameError: 'There is already an account using this email address'\r\n                }))\r\n            } \r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        let isValidForm = validateForm()\r\n        if (isValidForm) {\r\n            dispatch(createUser(\r\n                {\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    firstName: formData.firstName,\r\n                    lastName: formData.lastName\r\n                }\r\n            ));   \r\n            checkCredentials();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full sm:w-3/4 md:w-1/2 lg:w-5/12 xl:w-1/3'>\r\n                <div className='border border-gray-300 shadow-lg rounded bg-white px-10 py-14'>\r\n                    <h1 className='text-2xl font-semibold'>Almost There!</h1>\r\n                    <h3 className='text mb-10 text-gray-700'>Sign up with EventFinder and stay up to date with what's going on around you. </h3>\r\n                    <h5 className='text-sm mb-10 text-gray-700'>Already a member?  \r\n                        <span className='text-blue-500 font-semibold'>\r\n                            <Link to='/login'> Login</Link>\r\n                        </span>\r\n                    </h5>\r\n                    <form onSubmit={handleSubmit} className=''>\r\n                        <div className='mb-5'>\r\n                            <label htmlFor='email' className='block text-sm text-gray-700 mb-1'>Email Address</label>\r\n                            <input \r\n                                type='text' \r\n                                name='email' \r\n                                id='email'\r\n                                maxLength='25' \r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.usernameError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.usernameError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <label htmlFor='password' className='block text-sm text-gray-700 mb-1'>Password</label>\r\n                            <input \r\n                                type='password' \r\n                                name='password' \r\n                                id='password'\r\n                                maxLength='25' \r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.passwordError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.passwordError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='sm:grid sm:grid-cols-2 sm:gap-8'>\r\n                            <div className='mb-3'>\r\n                                <label htmlFor='firstName' className='block text-sm text-gray-700 mb-1'>First Name</label>\r\n                                <input \r\n                                    type='text' \r\n                                    name='firstName' \r\n                                    id='firstName'\r\n                                    maxLength='25' \r\n                                    value={formData.firstName}\r\n                                    onChange={handleChange}\r\n                                    className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                                {formData.firstNameError ? \r\n                                    <p className='text-xs text-red-500 mt-1'>{formData.firstNameError}</p> :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <label htmlFor='lastName' className='block text-sm text-gray-700 mb-1'>Last Name</label>\r\n                                <input \r\n                                    type='text' \r\n                                    name='lastName' \r\n                                    id='lastName'\r\n                                    maxLength='25' \r\n                                    value={formData.lastName}\r\n                                    onChange={handleChange}\r\n                                    className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                                {formData.lastNameError ? \r\n                                    <p className='text-xs text-red-500 mt-1'>{formData.lastNameError}</p> :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                            <button\r\n                                className='text-white uppercase tracking-wider bg-blue-500 mt-4 py-3 rounded w-full hover:bg-blue-600  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-blue-500 focus:ring-opacity-50 active:bg-blue-600' >\r\n                                    Sign Up\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegisterForm","import React from 'react';\r\n\r\nconst FavoriteArtistsProfile = ({artists, handleUnfollow}) => { \r\n    return (\r\n        <>\r\n        {artists ?\r\n            <div className='sm:px-3'>\r\n                <h2 className='text-2xl font-semibold mb-10'>My Artists</h2>\r\n                {artists.length ?\r\n                    artists.map(a => (\r\n                    <div key={a.id} className='border-b flex items-center justify-between py-4 px-1 hover:bg-gray-100'>\r\n                        <div className='flex items-center'>\r\n                            <div className=''>\r\n                                <img alt={a.name} src={a.photoUrl} className='w-16 md:w-24 rounded mr-4 md:mr-10'/>\r\n                            </div>\r\n                            <div className='pr-4'>\r\n                                <p className='text-sm sm:text-base font-semibold'>{a.name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={() => handleUnfollow(a.id)} className='text-sm text-red-500 hover:underline'>\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )) :\r\n                <h4 className='italic text-gray-800'>You haven't added any artists yet! You can click the heart icon on an artist's page to keep up to date with their events.</h4>\r\n                }\r\n            </div> :\r\n        null\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FavoriteArtistsProfile;","/**User profile\r\n * - displays:\r\n *      - basic user info\r\n *      - friends\r\n *      - artists following\r\n * - links to edit profile, view/find friends, view artists following\r\n */\r\n\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeArtist } from '../actions/actionCreators';\r\nimport FavoriteArtistsProfile from './FavoriteArtistsProfile';\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const artists = user.artists;\r\n\r\n    const handleUnfollow = id => {\r\n        dispatch(removeArtist({\r\n            id: id,\r\n            username: user.email\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full md:w-4/5 lg:w-4/6 xl:w-3/5'>\r\n                <FavoriteArtistsProfile artists={artists} handleUnfollow={handleUnfollow}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","/**Card that displays basic event info\r\n * - name\r\n * - venue\r\n * - date/time\r\n * - 'get tickets' button\r\n */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AttractionCardSmall = ({ name, segment, genre, img, id }) => {\r\n\r\n    return (\r\n        <>\r\n            <Link to={`/attraction/${id}`}>\r\n                <div className='border-b flex items-center hover:bg-gray-200 py-4'>\r\n                    <div className='mr-10'>\r\n                        <img src={img} alt={name} className='w-20'/>\r\n                    </div>\r\n                    <div>\r\n                        <p className='font-semibold'>{name}</p>\r\n                        <p className='text-gray-500 text-sm'>{segment} / {genre}</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AttractionCardSmall;","/**Search results for events\r\n * - shown when searching using search bar and when viewing attraction details\r\n * - renders EventCards\r\n */\r\n\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import { loadMore, searchEvents } from '../actions/actionCreators';\r\n// import { useLocation } from 'react-router-dom';\r\n// import queryString from 'query-string';\r\nimport AttractionCardSmall from './AttractionCardSmall';\r\n// import SearchFilters from './SearchFilters';\r\n\r\nconst AttractionSearchResults = ({attractionId, attractionName}) => {\r\n    // const dispatch = useDispatch();\r\n    const searchResults = useSelector(store => store.searchReducer);\r\n    const attractions = searchResults.attractions\r\n\r\n    \r\n    // const { search } = useLocation();\r\n    // const { location, keyword, classificationName } = queryString.parse(search);\r\n\r\n    // useEffect(() => {\r\n    //     if (!attractionId) {\r\n    //         if (events.length === 0) dispatch(searchEvents(queryString.parse(search)));\r\n    //     };\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n            {attractions ?\r\n                attractions.map(a => (\r\n                    <div key={a.id}>\r\n                        <AttractionCardSmall \r\n                            name={a.name}\r\n                            segment={a.classifications[0].segment ? a.classifications[0].segment.name : null}\r\n                            genre={a.classifications[0].genre ? a.classifications[0].genre.name : null}\r\n                            img={a.images[0].url}\r\n                            id={a.id}\r\n                        />\r\n                    </div>\r\n                )) :\r\n                <p>Couldn't find anything matching your search.</p>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AttractionSearchResults;","/**Card that displays basic event info\r\n * - name\r\n * - venue\r\n * - date/time\r\n * - 'get tickets' button\r\n */\r\n\r\nimport React from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nconst EventCard = ({ name, id, img, date, time, venue, ticketUrl}) => {\r\n\r\n    return (\r\n        <div className='border-b flex justify-between py-4 px-2 hover:bg-gray-100 sm:grid sm:grid-cols-6 sm:gap-2'>\r\n            <div className='hidden sm:inline'>\r\n                <img alt={name} src={img} className='w-24 rounded'/>\r\n            </div>\r\n            <div className='flex flex-col sm:col-span-4 md:grid md:grid-cols-6'>\r\n                <div className='mr-10 flex items-baseline md:flex-col md:col-span-2'>\r\n                    <p className='text-indigo-600 font-semibold mr-3 uppercase'>{dayjs(date).format('MMM D')}</p>\r\n                    <p className='text-gray-500'>{dayjs(`${date} ${time}`).format('ddd h:mm a')}</p>\r\n                </div>\r\n                <div className='pr-2 md:col-span-4'>\r\n                    <p className='font-semibold'>{name}</p>\r\n                    <p className='text-gray-500 text-sm'>{venue}</p>\r\n                </div>\r\n            </div>\r\n            <div className='mt-1'>\r\n                <a href={ticketUrl} target='_blank' rel='noreferrer'>\r\n                    <button className='bg-blue-600 px-6 py-2 tracking-wider rounded text-white hover:bg-blue-800 transition-colors ease-in-out duration-200'>Tickets</button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventCard;","/**Search results for events\r\n * - shown when searching using search bar and when viewing attraction details\r\n * - renders EventCards\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadMore, searchEvents } from '../actions/actionCreators';\r\nimport { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport EventCard from './EventCard';\r\n\r\nconst EventSearchResults = ({attractionId, attractionName}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const searchResults = useSelector(store => store.searchReducer);\r\n    const events = searchResults.events;\r\n\r\n    let loadMoreLink\r\n    searchResults.link ?  loadMoreLink = searchResults.link.href : loadMoreLink = null\r\n    const { search } = useLocation();\r\n    const { location, keyword } = queryString.parse(search);\r\n\r\n    useEffect(() => {\r\n        if (!attractionId) {\r\n            if (events.length === 0) dispatch(searchEvents(queryString.parse(search)));\r\n        };\r\n    }, [attractionId, dispatch, events.length, search])\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(loadMore(loadMoreLink));\r\n    };\r\n\r\n    const getImage = images => {\r\n        const isCorrectSize = element => element.width === 205\r\n        const idx = images.findIndex(isCorrectSize)\r\n        return images[idx].url\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {events ? \r\n            <div className=''>\r\n                \r\n                {attractionName &&\r\n                    <p className='mb-10 font-semibold text-xl'>\r\n                        Upcoming Events for {attractionName}\r\n                    </p>\r\n                }\r\n                {events.length === 0 ? \r\n                    <div>\r\n                        {keyword || location ? \r\n                        <p>Unfortunately, there are no upcoming events for {keyword} matching your criteria.</p> :\r\n                        <p>Unfortunately, there are no upcoming events for this artist.</p>\r\n                        }\r\n                    </div> :\r\n                    <>\r\n                    {events.map(e => (\r\n                    <div key={e.id}>\r\n                        <EventCard \r\n                            name={e.name} \r\n                            date={e.dates.start.localDate}\r\n                            time={e.dates.start.localTime}\r\n                            img={getImage(e.images)}\r\n                            id={e.id}\r\n                            ticketUrl={e.url}\r\n                            venue={e._embedded ? e._embedded.venues[0].name : null}\r\n                        />\r\n                    </div>\r\n                    ))}\r\n                    </>\r\n                }\r\n                {loadMoreLink &&\r\n                <div className='flex justify-center'>\r\n                    <div className='flex justify-center w-1/2 my-10'>\r\n                        <button onClick={handleLoadMore} className='w-full py-2 px-4 border border-blue-400 rounded transition-colors duration-200 ease-in-out hover:bg-blue-400 hover:text-white'>Load More</button>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div> :\r\n            null\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventSearchResults;","import React, { useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport AttractionSearchResults from './AttractionSearchResults';\r\nimport EventSearchResults from './EventSearchResults';\r\n\r\nconst SearchResults = () => {\r\n    const [activeLink, setActiveLink] = useState('attractions');\r\n    const { search } = useLocation();\r\n    let { keyword } = queryString.parse(search);\r\n\r\n    const handleAttractionsClick = () => {\r\n        setActiveLink('attractions')\r\n    }\r\n\r\n    const handleEventsClick = () => {\r\n        setActiveLink('events')\r\n    }\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full md:w-4/5 lg:w-3/5'>\r\n                <div className='text-2xl mb-8'>\r\n                    <p>Searching for <span className='font-semibold text-indigo-700'>\"{keyword}\"</span></p>\r\n                </div>\r\n                <div className='flex text-xl'>\r\n                    <button onClick={handleAttractionsClick} className={`mb-8 mr-6 py-2 ${activeLink === 'attractions' ? 'border-b-4 border-blue-500' : 'border-b-4 border-transparent'}`}>Attractions</button>\r\n                    <button onClick={handleEventsClick} className={`mb-8 py-2 ${activeLink === 'events' ? 'border-b-4 border-blue-500' : 'border-b-4 border-transparent'}`}>Events</button>\r\n                </div>\r\n                <div>\r\n                    {activeLink === 'attractions' ? \r\n                        <AttractionSearchResults /> :\r\n                        <EventSearchResults />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchResults;","/**Details for an attraction to be shown on attraction page\r\n * - name\r\n * - genre\r\n * - faux rating\r\n * - follow button\r\n * - image\r\n * - event results\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAttractionDetails, searchEvents, addArtist, removeArtist } from '../actions/actionCreators';\r\nimport EventSearchResults from './EventSearchResults';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faHeart as faHeartRegular} from '@fortawesome/free-regular-svg-icons'\r\nimport {faHeart as faHeartSolid} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AttractionDetail = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { attractionId } = useParams();\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    // const [isLoading, setIsLoading] = useState(true)\r\n    const attraction = useSelector(store => store.attractionsReducer.details);\r\n    const user = useSelector(store => store.userReducer.user);\r\n\r\n    // const checkIfFollowing = () => {\r\n    //     if (user.loggedIn) setIsFollowing(user.artists.map(a => a.id).includes(attractionId));\r\n    // };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAttractionDetails(attractionId));\r\n        dispatch(searchEvents({attractionId}));\r\n        if (user.loggedIn) setIsFollowing(user.artists.map(a => a.id).includes(attractionId));\r\n        // setIsLoading(false)\r\n    }, [attractionId, user.loggedIn, user.artists, dispatch]);\r\n\r\n    const getImage = images => {\r\n        const isCorrectSize = element => element.width === 640\r\n        const idx = images.findIndex(isCorrectSize)\r\n        return images[idx].url\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        if (user.loggedIn) {\r\n            dispatch(addArtist({\r\n                id: attractionId,\r\n                name: attraction.name,\r\n                photoUrl: attraction.images[2].url,\r\n                username: user.email\r\n            }));\r\n            setIsFollowing(true);\r\n        } else {\r\n            navigate('/login')\r\n        }            \r\n    };\r\n\r\n    const handleUnfollow = () => {\r\n        dispatch(removeArtist({\r\n            id: attractionId,\r\n            username: user.email\r\n        }));\r\n        setIsFollowing(false);\r\n    };\r\n\r\n    const renderFollowButton = () => (\r\n        isFollowing ? \r\n        <div className='flex ml-1'>\r\n            <button onClick={handleUnfollow} className='mr-2'>\r\n                <FontAwesomeIcon icon={faHeartSolid} className='text-xl text-red-500'/>\r\n            </button>\r\n            <p className='text-sm text-gray-400 italic'>Following</p>\r\n        </div> :\r\n        <div className='flex ml-1'>\r\n            <button onClick={handleFollow} className='mr-2'>\r\n                <FontAwesomeIcon icon={faHeartRegular} className='text-xl text-gray-700'/>\r\n            </button> \r\n            <p className='text-sm text-gray-400'>Follow</p>\r\n        </div>\r\n    );\r\n    \r\n    return (\r\n    <>\r\n    {attraction ?\r\n        <div className='flex justify-center px-3'>\r\n            <div className='flex flex-col items-center md:w-4/5 lg:w-3/5'>\r\n                <div className='sm:grid sm:grid-cols-2 w-full'>\r\n                    <div className='sm:order-last lg:flex lg:justify-end'>\r\n                            {attraction.images ?\r\n                                <img alt={attraction.name} className='rounded mb-4 w-full' src={getImage(attraction.images)}/> :\r\n                                null\r\n                            }\r\n                    </div>\r\n                    <div>\r\n                        <p className='text-5xl mb-4'>{attraction.name}</p>\r\n                        {attraction.classifications ? \r\n                        <p className='mb-4 ml-1 text-xl text-gray-500'>\r\n                            {attraction.classifications[0].segment.name} / {attraction.classifications[0].genre.name}\r\n                        </p> :\r\n                        null\r\n                        }\r\n                        {renderFollowButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='w-full mt-10'>\r\n                    {attraction.id === attractionId ?\r\n                        <EventSearchResults attractionId={attraction.id} attractionName={attraction.name}/> :\r\n                        null    \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div> :\r\n        null\r\n    }\r\n    </>\r\n    );\r\n    \r\n};\r\n\r\nexport default AttractionDetail;","/**Filters to be shown when searching events\r\n * - rendered by SearchResults\r\n * - filters for date, classification, radius, sort by\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchEvents } from '../actions/actionCreators';\r\nimport dayjs from 'dayjs';\r\nimport queryString from 'query-string';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst EventFilters = ({ attractionId }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n    let { location, keyword, startDateTime, sort, radius, classificationName } = queryString.parse(search);\r\n    if (classificationName === 'arts') classificationName = 'arts&theatre';\r\n\r\n    const INITIAL_STATE = {\r\n        startDateTime: startDateTime || dayjs().format(),\r\n        location: location || '',\r\n        classificationName: classificationName || 'all',\r\n        sort: sort || 'date,asc',\r\n        radius: radius || '50'\r\n    };\r\n\r\n    const [filterData, setFilterData] = useState(INITIAL_STATE);\r\n\r\n    useEffect(() => {\r\n        setFilterData(INITIAL_STATE)\r\n    }, [location, keyword, classificationName, startDateTime]);\r\n\r\n    // const handleDateChange = date => {\r\n    //     const formattedDate = dayjs(date).format('YYYY-MM-DDTHH:mm:ss')\r\n    //     setFilterData(data => ({...data, startDateTime: formattedDate}));\r\n    // };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFilterData(data => ({...data, [name]: value}))\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        if (attractionId) {\r\n            dispatch(searchEvents({ \r\n                attractionId, \r\n                // sort: filterData.sort,\r\n                startDateTime: dayjs(filterData.startDateTime).format()}));\r\n        } else {\r\n            dispatch(searchEvents({\r\n                ...queryString.parse(search), \r\n                ...filterData, \r\n                classificationName: filterData.classificationName === 'all' ? '' : filterData.classificationName,\r\n                startDateTime: dayjs(filterData.startDateTime).format()}));\r\n            navigate({\r\n                pathname: '/discover',\r\n                search: `?location=${filterData.location || ''}&keyword=${keyword || ''}&startDateTime=${dayjs(filterData.startDateTime).format()}&classificationName=${filterData.classificationName}&sort=${filterData.sort}&radius=${filterData.radius}`\r\n            });\r\n        };\r\n    };\r\n    \r\n    return (\r\n        <div className='sm:w-1/2 xl:w-1/3'>\r\n            <form onSubmit={handleSubmit}>\r\n            <div className='flex flex-col'>\r\n                <div className='mb-2'>\r\n                    <input \r\n                        type='text'\r\n                        name='location'\r\n                        id='location'\r\n                        value={filterData.location}\r\n                        onChange={handleChange}\r\n                        placeholder='Enter city or zip'\r\n                        className='border-gray-500 rounded mb-2 w-full'\r\n                    />\r\n                    <input \r\n                        type='date'\r\n                        id='datePicker'\r\n                        name='startDateTime'\r\n                        value={filterData.startDateTime}\r\n                        onChange={handleChange}\r\n                        className='border-gray-500 rounded w-full'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className='bg-gray-200 px-3 py-2 rounded text-gray-700 text-sm ml-1'>Apply Filters</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventFilters;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EventSearchResults from './EventSearchResults';\r\nimport EventFilters from './EventFilters';\r\n\r\nconst Discover = () => {\r\n    const { search } = useLocation();\r\n    let { location, startDateTime, classificationName } = queryString.parse(search);\r\n\r\n    if (classificationName === 'arts') classificationName = 'arts & theater' \r\n\r\n    // const INITIAL_STATE = {\r\n    //     location: location || null,\r\n    //     startDateTime: startDateTime || null,\r\n    //     classificationName: classificationName \r\n    // }\r\n    // const [queries, setQueries] = useState(INITIAL_STATE)\r\n\r\n    const capitalizeFirstLetter = str => {\r\n        return str.split(' ').reduce((acc, e) => {\r\n            if ((/[a-zA-Z]/).test(e[0])) {\r\n                return acc + e.charAt(0).toUpperCase() + e.slice(1) + \" \";\r\n            } else {\r\n                return acc + e + \" \"\r\n            }\r\n        }, \"\")\r\n        \r\n      }\r\n\r\n    const renderHeading = () => {\r\n        return (\r\n            <div className='text-2xl mb-10'>\r\n            <p className='inline'>Showing upcoming <span className='font-semibold text-indigo-700'>{capitalizeFirstLetter(classificationName)}</span> events</p>\r\n            {location ? \r\n                <p className='inline'> near <span className='font-semibold text-indigo-700'>{capitalizeFirstLetter(location)}</span></p> : \r\n                null\r\n            }\r\n            {startDateTime ?\r\n                <p className='inline'> starting <span className='font-semibold text-indigo-700'>{dayjs(startDateTime).format('MMM D, YYYY')}</span></p> :\r\n                null\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='px-3'>\r\n            <div className='w-full flex justify-center '>\r\n                <div className='md:w-4/5 lg:w-3/5'>\r\n                    <div>\r\n                        {renderHeading()}\r\n                    </div>\r\n                    <div className='mb-10'>\r\n                        <EventFilters />\r\n                    </div>\r\n                    <div>\r\n                        <EventSearchResults />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Discover;","/**Login form */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, clearLoginError } from '../actions/actionCreators';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const INITIAL_STATE = {\r\n        email: 'testuser@email.com',\r\n        password: 'password',\r\n        emailError: '',\r\n        passwordError: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    useEffect(() => {\r\n        dispatch(clearLoginError())\r\n        if (user.loggedIn) {\r\n            navigate('/')\r\n        }\r\n        if (user.error) {\r\n            setFormData(data => ({\r\n                ...data, emailError: 'Invalid email/password', passwordError: 'Invalid email/password'\r\n            }))\r\n            setIsLoading(false)\r\n        }\r\n    }, [user.loggedIn, navigate, user.error])\r\n\r\n    const validateForm = () => {\r\n        let validForm = true\r\n        if (!formData.email) {\r\n          setFormData(data => ({\r\n            ...data, emailError: 'Email cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n          setFormData(data => ({\r\n            ...data, emailError: ''\r\n          }))\r\n        }\r\n        if (!formData.password) {\r\n          setFormData(data => ({\r\n            ...data, passwordError: 'Password cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, passwordError: ''\r\n            }))\r\n        }\r\n        return validForm\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFormData(data => ({...data, [name]: value}));\r\n    };\r\n\r\n    const handleSubmit = async evt => {\r\n        evt.preventDefault();\r\n        let isValidForm = validateForm()\r\n            if (isValidForm) {\r\n                dispatch(loginUser(\r\n                    {\r\n                        email: formData.email,\r\n                        password: formData.password\r\n                    }\r\n                ))\r\n                setIsLoading(true)\r\n            }\r\n    };\r\n    \r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full sm:w-3/4 md:w-1/2 lg:w-5/12 xl:w-1/3'>\r\n                <div className='border border-gray-300 shadow-lg rounded bg-white px-10 py-14'>\r\n                    <h1 className='text-2xl font-semibold'>Welcome Back!</h1>\r\n                    <h3 className='text mb-10 text-gray-700'>Sign in below and discover awesome events and artists nearby. </h3>\r\n                    <h5 className='text-sm mb-10 text-gray-700'>New to EventFinder?  \r\n                        <span className='text-blue-500 font-semibold'>\r\n                            <Link to='/register'> Sign up</Link>\r\n                        </span>\r\n                    </h5>\r\n                    <form onSubmit={handleSubmit} className=''>\r\n                        <div className='mb-5'>\r\n                            <label htmlFor='email' className='block text-sm text-gray-700 mb-1'>Email Address</label>\r\n                            <input \r\n                                type='text' \r\n                                name='email' \r\n                                id='email'\r\n                                maxLength='25' \r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.emailError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.emailError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <label htmlFor='password' className='block text-sm text-gray-700 mb-1'>Password</label>\r\n                            <input \r\n                                type='password' \r\n                                name='password' \r\n                                id='password'\r\n                                maxLength='25' \r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.passwordError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.passwordError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                            <button\r\n                                disabled={isLoading ? true : false}\r\n                                className={isLoading ? \r\n                                    'text-white uppercase tracking-wider bg-gray-500 mt-4 py-3 rounded w-full' :\r\n                                    'text-white uppercase tracking-wider bg-blue-500 mt-4 py-3 rounded w-full hover:bg-blue-600  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-blue-500 focus:ring-opacity-50 active:bg-blue-600'} >\r\n                                    {isLoading ? \"Loading\" : \"Login\"}\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","/**App routes */\r\n\r\nimport React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport RegisterForm from './RegisterForm';\r\nimport Profile from './Profile';\r\nimport SearchResults from './SearchResults';\r\nimport AttractionDetail from './AttractionDetail';\r\nimport Discover from './Discover';\r\nimport LoginForm from './LoginForm';\r\n// import EditProfileForm from './EditProfileForm';\r\n// import ArtistsList from './ArtistsList';\r\n// import EventDetail from './EventDetail';\r\n\r\nconst RoutesComponent = () => {\r\n    return (    \r\n        <Routes>\r\n            <Route path='/login' element={<LoginForm />} />\r\n            <Route path='/register' element={<RegisterForm />} />\r\n            <Route path='/profile' element={<Profile />} />\r\n            <Route path='/attraction/:attractionId' element={<AttractionDetail />} />\r\n            <Route path='/search' element={<SearchResults />} />\r\n            <Route path='/discover' element={<Discover />}/>\r\n            <Route path='/' element={<Home />}/>\r\n        </Routes>    \r\n    );\r\n};\r\n\r\nexport default RoutesComponent;","/**Search bar rendered in Header\r\n * - allows searching by keyword and location\r\n *    - location can be city name or zipcode\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { searchEvents, searchAttractions } from '../actions/actionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faMagnifyingGlass} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Search = () => {\r\n    \r\n    const { search } = useLocation();\r\n    const { location, keyword } = queryString.parse(search);\r\n\r\n    const INITIAL_STATE = {\r\n    location: '',\r\n    keyword: ''\r\n    };\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n    setFormData({\r\n        location: location || '',\r\n        keyword: keyword || ''\r\n    })\r\n    }, [search, keyword, location])\r\n\r\n    const handleChange = evt => {\r\n    const {name, value} = evt.target\r\n    setFormData(data => ({...data, [name]: value}))\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        try {\r\n            dispatch(searchAttractions(formData));\r\n            dispatch(searchEvents(formData));\r\n            navigate({\r\n                pathname: '/search',\r\n                // search: `?location=${formData.location}&keyword=${formData.keyword}`,\r\n                search: `?keyword=${formData.keyword}`\r\n            });\r\n        } catch (e) {\r\n            console.log(e)\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='flex items-center'>\r\n                    <input \r\n                        type='text'\r\n                        placeholder='Search events and attractions'\r\n                        name='keyword'\r\n                        value={formData.keyword}\r\n                        onChange={handleChange}\r\n                        className='rounded bg-white placeholder-opacity-80 w-72 px-4 py-2 mr-3 sm:w-80 lg:mr-2 focus:ring-0'\r\n                    />\r\n                    <button>\r\n                        <FontAwesomeIcon icon={faMagnifyingGlass} className='text-xl text-white'/>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","/**Header \r\n * - nav links\r\n * - renders search bar\r\n*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../actions/actionCreators';\r\nimport { searchEvents } from '../actions/actionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport Search from './Search';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const [navbarOpen, setNavbarOpen] = useState(false);\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        setNavbarOpen(false)\r\n    }, [location.pathname, location.search])\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutUser());\r\n        navigate('/')\r\n    };\r\n\r\n    const renderUserLinks = () => {\r\n        if (user.loggedIn) {\r\n            return (\r\n                <>\r\n                <li className='nav-item px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <Link to='/profile'>\r\n                        <button className='font-semibold mr-4'>My Profile</button>\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <button onClick={handleLogout} className='font-semibold'>Logout</button>\r\n                </li>\r\n                </>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                {/* <Link to='/register'>\r\n                    <button className='mr-6 font-semibold'>Register</button>\r\n                </Link> */}\r\n                <li className='nav-item px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <Link to='/login'>\r\n                        <button className='font-semibold'>Login</button>\r\n                    </Link>\r\n                </li>\r\n                </>\r\n            );\r\n        };\r\n    };\r\n\r\n    const navigate = useNavigate()\r\n    const handleClick = title => {\r\n        dispatch(searchEvents({classificationName: title}));\r\n        navigate({\r\n            pathname: '/discover',\r\n            search: `?classificationName=${title}`\r\n        });   \r\n    };\r\n    \r\n    return (\r\n        <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 lg:py-8 bg-gray-800 mb-3\">\r\n            <div className=\"container px-2 mx-auto flex flex-wrap items-center justify-between lg:px-0\">\r\n                <div className=\"w-full px-1 relative flex justify-between lg:px-0 lg:w-auto lg:static lg:block lg:justify-start lg:mr-6\">\r\n                    <Link\r\n                        to='/'\r\n                        className=\"font-semibold text-2xl italic leading-relaxed inline-block py-2 whitespace-nowrap text-white\"\r\n                    >\r\n                    EventFinder\r\n                    </Link>\r\n                    \r\n                    <button\r\n                        className=\"text-white cursor-pointer text-2xl leading-none px-1 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n                        type=\"button\"\r\n                        onClick={() => setNavbarOpen(!navbarOpen)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faBars}/>\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        \"flex-col flex-grow items-start lg:flex lg:flex-row lg:justify-between\" +\r\n                        (navbarOpen ? \" flex\" : \" hidden\")\r\n                    }\r\n                    id=\"example-navbar-danger\"\r\n                >\r\n                    <div className='lg:flex lg:flex-row'>\r\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n                            <Search />\r\n                            <li className=\"nav-item lg:ml-6\">\r\n                                <button onClick={() => handleClick('music')} className='px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>Concerts</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button onClick={() => handleClick('sports')} className='px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>Sports</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button onClick={() => handleClick('arts&theatre')} className='px-2 py-2 flex items-center font-semibold leading-snug text-white hover:opacity-75'>Arts & Theater</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='lg:flex lg:flex-row'>\r\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n                            {renderUserLinks()}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                            \r\n                            \r\n                    \r\n                    \r\n                </div>\r\n            </div>  \r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='flex justify-center py-10 text-sm text-gray-600'>\r\n            <p>EventFinder 2022</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport RoutesComponent from './RoutesComponent';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst App = () => {\n  // const getLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(showPosition);\n  //   } else {\n  //     console.log('geolocation not supported')\n  //   }\n  // }\n\n  // const showPosition = pos => {\n  //   console.log(`latitude: ${pos.coords.latitude}, longitude: ${pos.coords.longitude}`)\n  // }\n\n  return (\n    <div className='flex flex-col min-h-screen'>\n      <div className='mb-10'>\n        <Header />\n      </div>  \n      <div className=''>\n        <RoutesComponent />\n      </div>\n      <div className='flex flex-grow' />\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**Search reducer handles searches of events and users\r\n * - events from search bar or attraction details\r\n * - event details\r\n * - users when searching users by usernames\r\n */\r\n\r\nimport { SEARCH_EVENTS, SEARCH_ATTRACTIONS, LOAD_MORE, GET_EVENT_DETAIL, SEARCH_USERS, CLEAR_SEARCH_USERS } from '../actions/actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    events: [],\r\n    link: '',\r\n    eventDetail: {},\r\n    attractions: [],\r\n    users: []\r\n};\r\n\r\nconst searchReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_EVENTS:\r\n            let events\r\n            action.searchResults._embedded ? events = action.searchResults._embedded.events : events = []\r\n            return {...state, events: events, link: action.searchResults._links.next}\r\n        case LOAD_MORE:\r\n            return {...state, events: [...state.events, ...action.results._embedded.events], link: action.results._links.next}\r\n        case GET_EVENT_DETAIL:\r\n            return {...state, eventDetail: action.eventDetail}\r\n        case SEARCH_ATTRACTIONS:\r\n            return {...state, attractions: action.searchAttractionsResults._embedded.attractions}\r\n        case SEARCH_USERS:\r\n            return {...state, users: action.users}\r\n        case CLEAR_SEARCH_USERS:\r\n            return {...state, users: []}\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default searchReducer;","/**Attractions reducer handles changes to attraction data in state\r\n * - main attractions shown on homepage\r\n * - attraction details shown on attraction detail page\r\n*/\r\n\r\nimport { GET_ATTRACTIONS, GET_ATTRACTION_DETAILS } from '../actions/actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    attractionsHome: {\r\n        music: {\r\n            title: 'Music',\r\n            attractions: []\r\n        },\r\n        sports: {\r\n            title: 'Sports',\r\n            attractions: []\r\n        },\r\n        films: {\r\n            title: 'Films',\r\n            attractions: []\r\n        },\r\n        artsAndTheatre: {\r\n            title: 'Arts & Theatre',\r\n            attractions: []\r\n        }\r\n    },\r\n    details: {}\r\n};\r\n\r\nconst attractionsReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case GET_ATTRACTIONS:\r\n            return {...state, \r\n                attractionsHome: {...state.attractionsHome,\r\n                    music: {...state.attractionsHome.music, attractions: action.attractions.music}, \r\n                    sports: {...state.attractionsHome.sports, attractions: action.attractions.sports}, \r\n                    films: {...state.attractionsHome.films, attractions: action.attractions.films},\r\n                    artsAndTheatre: {...state.attractionsHome.artsAndTheatre, attractions: action.attractions.artsAndTheatre}\r\n                }\r\n            };\r\n        case GET_ATTRACTION_DETAILS:\r\n                return {...state,\r\n                        details: action.attractionDetails\r\n                }\r\n        default:\r\n            return state    \r\n    };\r\n};\r\n\r\nexport default attractionsReducer;","/**User reducer handles all changes to user data in state\r\n * - username, first name, last name, email, photo url\r\n * - friends\r\n * - artists following\r\n * - is logged in\r\n */\r\n\r\nimport { \r\n    CREATE_USER, \r\n    GET_USER, \r\n    UPDATE_USER, \r\n    LOGIN_USER, \r\n    LOGIN_ERROR,\r\n    CLEAR_LOGIN_ERROR,\r\n    LOGOUT_USER, \r\n    ADD_ARTIST, \r\n    REMOVE_ARTIST, \r\n} from \"../actions/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\nuser: {\r\n    loggedIn: false,\r\n    artists: [],\r\n    error: false\r\n}\r\n};\r\n\r\nconst userReducer = (state=INITIAL_STATE, action) => {\r\nswitch(action.type) {\r\n    case CREATE_USER:\r\n        return {...state, user: {...action.user, loggedIn: true, error: false}};\r\n    case LOGIN_USER:\r\n        return {...state, user: {...action.user, loggedIn: true, error: false}};\r\n    case LOGIN_ERROR:\r\n        return {...state, user: {...state.user, error: action.error}};\r\n    case CLEAR_LOGIN_ERROR:\r\n        return {...state, user: {...state.user, error: false}};\r\n    case GET_USER:\r\n        return {...state, user: {...action.user, loggedIn: true, error: false}};\r\n    case UPDATE_USER:\r\n        return {...state, \r\n            user: {\r\n                ...state.user,\r\n                firstName: action.user.firstName,\r\n                lastName: action.user.lastName,\r\n                email: action.user.email\r\n            }\r\n        };\r\n    case LOGOUT_USER:\r\n        return INITIAL_STATE;\r\n    case ADD_ARTIST:\r\n        return {...state, user: {...state.user, artists: [...state.user.artists, action.artist]}};\r\n    case REMOVE_ARTIST:\r\n        return {...state, user: {...state.user, artists: state.user.artists.filter(a => a.id !== action.id)}};\r\n    default:\r\n        return state\r\n};\r\n};\r\n\r\nexport default userReducer;","/**Combine reducers into single rootReducer */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\nimport attractionsReducer from './attractionsReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    searchReducer,\r\n    attractionsReducer,\r\n    userReducer\r\n});\r\n\r\nexport default rootReducer;","/**Scroll to top of page when path changes */\r\n\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './reducers/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <ScrollToTop />\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}