{"version":3,"sources":["actions/actionTypes.js","secrets.js","TMApi.js","actions/actionCreators.js","components/AttractionCard.js","components/AttractionCardList.js","components/FavoriteArtistsHome.js","components/Home.js","components/RegisterForm.js","components/FavoriteArtistsProfile.js","components/Profile.js","components/AttractionCardSmall.js","components/AttractionSearchResults.js","components/EventCard.js","components/EventSearchResults.js","components/SearchResults.js","components/AttractionDetail.js","components/EventFilters.js","components/Discover.js","components/LoginForm.js","components/RoutesComponent.js","components/Search.js","components/Header.js","components/Footer.js","components/App.js","reportWebVitals.js","reducers/searchReducer.js","reducers/attractionsReducer.js","reducers/userReducer.js","reducers/rootReducer.js","components/ScrollToTop.js","index.js"],"names":["CREATE_USER","GET_USER","LOGIN_USER","UPDATE_USER","LOGOUT_USER","SEARCH_EVENTS","SEARCH_USERS","CLEAR_SEARCH_USERS","LOAD_MORE","SEARCH_ATTRACTIONS","GET_ATTRACTIONS","GET_ATTRACTION_DETAILS","GET_EVENT_DETAIL","ADD_ARTIST","REMOVE_ARTIST","API_KEY","BASE_URL","TMApi","endpoint","params","includes","replace","url","axios","method","apikey","data","console","error","response","location","postalCode","city","this","request","size","res","id","classification","classificationName","link","process","createdUser","user","type","loggedInUser","loggedOutUser","gotUser","addedArtist","artist","removeArtist","dispatch","a","delete","username","removedArtist","log","searchEvents","searchResults","searchAttractionsResults","moreResults","results","gotAttractions","attractions","gotAttractionDetails","attractionDetails","AttractionCard","name","img","eventCount","className","to","src","alt","AttractionCardList","title","map","images","upcomingEvents","_total","FavoriteArtistsHome","artists","photoUrl","Home","useDispatch","useSelector","store","attractionsReducer","attractionsHome","userReducer","storedToken","localStorage","getItem","useEffect","token","jwt","decode","JSON","parse","get","getAttractions","musicRes","sportsRes","filmRes","artsAndTheatreRes","music","_embedded","sports","films","artsAndTheatre","loggedIn","Object","keys","length","RegisterForm","timeout","navigate","useNavigate","useState","email","password","firstName","lastName","usernameError","passwordError","firstNameError","lastNameError","formData","setFormData","clearTimeout","handleChange","evt","target","value","onSubmit","preventDefault","validForm","validateForm","post","setItem","stringify","createUser","setTimeout","htmlFor","maxLength","onChange","FavoriteArtistsProfile","handleUnfollow","onClick","Profile","AttractionCardSmall","segment","genre","AttractionSearchResults","attractionId","attractionName","searchReducer","classifications","EventCard","date","time","venue","ticketUrl","dayjs","format","href","rel","EventSearchResults","loadMoreLink","events","search","useLocation","queryString","keyword","e","dates","start","localDate","localTime","venues","loadMore","SearchResults","activeLink","setActiveLink","AttractionDetail","useParams","isFollowing","setIsFollowing","attraction","details","getAttractionDetails","handleFollow","icon","faHeartSolid","faHeartRegular","EventFilters","startDateTime","sort","radius","INITIAL_STATE","filterData","setFilterData","pathname","placeholder","Discover","LoginForm","emailError","isValidForm","headers","RoutesComponent","path","element","Search","searchAttractions","faMagnifyingGlass","Header","navbarOpen","setNavbarOpen","handleLogout","removeItem","handleClick","faBars","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eventDetail","users","state","action","_links","next","filter","rootReducer","combineReducers","ScrollToTop","window","scrollTo","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b213b07.chunk.js","sourcesContent":["/**Action types for reducer actions */\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const SEARCH_EVENTS = 'SEARCH_EVENTS';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const CLEAR_SEARCH_USERS = 'CLEAR_SEARCH_USERS';\r\nexport const LOAD_MORE = 'LOAD_MORE';\r\nexport const SEARCH_ATTRACTIONS = 'SEARCH_ATTRACTIONS';\r\nexport const GET_ATTRACTIONS = 'GET_ATTRACTIONS';\r\nexport const GET_ATTRACTION_DETAILS = 'GET_ATTRACTION_DETAILS';\r\nexport const GET_EVENT_DETAIL = 'GET_EVENT_DETAIL';\r\nexport const ADD_ARTIST = 'ADD_ARTIST';\r\nexport const REMOVE_ARTIST = 'REMOVE_ARTIST';\r\n","export const API_KEY = 'sY0V0bcC0RC1F9yjSh1wrBB70hXSQswG'","import axios from 'axios';\r\nimport {API_KEY} from './secrets';\r\n\r\nconst BASE_URL = 'https://app.ticketmaster.com/discovery/v2';\r\n\r\nclass TMApi {\r\n    static async request(endpoint, params={}) {\r\n        let url \r\n        if (endpoint.includes('discovery')) {\r\n            endpoint = endpoint.replace('/discovery/v2', '')\r\n            url = `${BASE_URL}/${endpoint}`\r\n        } else {\r\n            url = `${BASE_URL}/${endpoint}.json`\r\n        }\r\n\r\n        try {\r\n          return (await axios({ url, method: 'get', params: {...params, apikey: API_KEY} })).data;\r\n        } catch (err) {\r\n          console.error(\"API Error:\", err.response);\r\n        }\r\n    };\r\n\r\n    static async searchEvents(data) {\r\n        let params = {...data}\r\n        if (data.location) {\r\n            if ( +data.location ) {\r\n                params.postalCode = data.location\r\n            } else {\r\n                params.city = data.location\r\n            };\r\n            delete params.location\r\n        };\r\n        \r\n        const res = await this.request('events', { ...params, size: 10 });\r\n        return res;\r\n    };\r\n\r\n    static async searchAttractions(data) {\r\n        let params = {...data}\r\n        \r\n        const res = await this.request('attractions', { ...params, size: 50 });\r\n        return res;\r\n    };\r\n\r\n    static async getEventDetail(id) {\r\n        const res = await this.request(`events/${id}`);\r\n        return res;\r\n    };\r\n\r\n    static async getAttractions(classification) {\r\n        const res = await this.request('attractions', {classificationName: classification, size: 8});\r\n        return res;\r\n    };\r\n\r\n    static async loadMore(link) {\r\n        const res = await this.request(link)\r\n        return res;\r\n    };\r\n\r\n    static async getAttractionDetails(id) {\r\n        const res = await this.request(`/attractions/${id}`);\r\n        return res;\r\n    };\r\n};\r\n\r\nexport default TMApi;","import axios from 'axios';\r\nimport { \r\n        CREATE_USER, \r\n        LOGIN_USER, \r\n        GET_USER, \r\n        UPDATE_USER, \r\n        LOGOUT_USER, \r\n        SEARCH_EVENTS, \r\n        LOAD_MORE, \r\n        SEARCH_ATTRACTIONS,\r\n        GET_ATTRACTIONS, \r\n        GET_ATTRACTION_DETAILS, \r\n        ADD_ARTIST, \r\n        REMOVE_ARTIST, \r\n        GET_EVENT_DETAIL\r\n       } \r\n       from './actionTypes';\r\nimport jwt from 'jsonwebtoken';\r\nimport TMApi from '../TMApi';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\r\n\r\n/**USER ACTIONS\r\n * - create new user\r\n * - login user\r\n * - logout user\r\n * - update user\r\n * - get user (using token in local storage)\r\n */\r\n\r\n/**Create new user\r\n * - make request to backend with user data\r\n * - store token in localStorage\r\n */\r\nexport const createUser = user => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/register`, user);\r\n            localStorage.setItem('token', JSON.stringify(res.data.token));\r\n            dispatch(createdUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst createdUser = user => {\r\n    return {\r\n        type: CREATE_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**Login user\r\n//  * - store token in loalStorage\r\n//  */\r\nexport const loginUser = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/login`, data, \r\n            {headers: \r\n                {'Content-Type': 'application/json'}\r\n            });\r\n            localStorage.setItem('token', JSON.stringify(res.data.token));\r\n            dispatch(loggedInUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst loggedInUser = user => {\r\n    return {\r\n        type: LOGIN_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**Logout user\r\n//  * - remove token from localStorage\r\n//  */\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('token');\r\n        dispatch(loggedOutUser());\r\n    };\r\n};\r\n\r\nconst loggedOutUser = () => {\r\n    return {\r\n        type: LOGOUT_USER,\r\n    };\r\n};\r\n\r\n// /**Get user details\r\n//  * - decode token in localStorage to get username\r\n//  * - make request to backend to get user object\r\n//  */\r\nexport const getUser = token => {\r\n    return async dispatch => {\r\n        try {\r\n            const { username } = jwt.decode(JSON.parse(token));\r\n            const res = await axios.get(`${BASE_URL}/users/${username}`);\r\n            dispatch(gotUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        }\r\n    };\r\n};\r\n\r\nconst gotUser = user => {\r\n    return {\r\n        type: GET_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**Update user\r\n//  * - make patch request to backend and update redux store\r\n//  */\r\nexport const updateUser = (username, data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.patch(`${BASE_URL}/users/${username}`, data);\r\n            dispatch(updatedUser(res.data.user));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst updatedUser = user => {\r\n    return {\r\n        type: UPDATE_USER,\r\n        user\r\n    };\r\n};\r\n\r\n// /**USER FRIENDS AND ARTISTS AND ACTIONS\r\n//  *  - add/remove artist from following\r\n//  *  - add/remove friend\r\n//  */\r\n\r\n//  /**Add artist\r\n//   * - make post request to backend with artist data\r\n//   */\r\nexport const addArtist = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(`${BASE_URL}/users/${data.username}/artists`, data);\r\n            dispatch(addedArtist(res.data.artist))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst addedArtist = artist => {\r\n    return {\r\n        type: ADD_ARTIST,\r\n        artist\r\n    };\r\n};\r\n\r\nexport const removeArtist = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.delete(`${BASE_URL}/users/${data.username}/artists`, {data});\r\n            dispatch(removedArtist(res.data.id));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst removedArtist = id => {\r\n    return {\r\n        type: REMOVE_ARTIST,\r\n        id\r\n    };\r\n};\r\n\r\n/**Search actions \r\n * - handle search\r\n * - load more results\r\n*/\r\n\r\n/**Search events\r\n * - call our TMApi class method with provided search data\r\n */\r\nexport const searchEvents = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.searchEvents(data);\r\n            dispatch(searchResults(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };   \r\n};\r\n\r\nconst searchResults = (searchResults) => {\r\n    return {\r\n        type: SEARCH_EVENTS,\r\n        searchResults\r\n    };\r\n};\r\n\r\nexport const searchAttractions = data => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.searchAttractions(data);\r\n            dispatch(searchAttractionsResults(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };   \r\n};\r\n\r\nconst searchAttractionsResults = (searchAttractionsResults) => {\r\n    return {\r\n        type: SEARCH_ATTRACTIONS,\r\n        searchAttractionsResults\r\n    };\r\n};\r\n\r\n/**Load more events\r\n * - we don't want to load all search results on inital request, so loadMore will get the next set of results on request\r\n * - calls TMApi class method for loading more events\r\n */\r\nexport const loadMore = link => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.loadMore(link)\r\n            dispatch(moreResults(res))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst moreResults = results => {\r\n    return {\r\n        type: LOAD_MORE,\r\n        results\r\n    };\r\n};\r\n\r\n/**Get event details\r\n * - call TMApi class method with event id to get event details\r\n */\r\nexport const getEventDetail = id => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await TMApi.getEventDetail(id);\r\n            dispatch(gotEventDetail(res));\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst gotEventDetail = eventDetail => {\r\n    return {\r\n        type: GET_EVENT_DETAIL,\r\n        eventDetail\r\n    };\r\n};\r\n\r\n/**Search users\r\n * - search any registered users by username\r\n * - make ge request to backend search route\r\n */\r\n// export const searchUsers = username => {\r\n//     return async dispatch => {\r\n//         try {\r\n//             const res = await axios.get(`${BASE_URL}/users/search/${username}`);\r\n//             dispatch(searchUsersResults(res.data.users));\r\n//         } catch (e) {\r\n//             console.log(e);\r\n//             return e;\r\n//         };\r\n//     };\r\n// };\r\n\r\n// const searchUsersResults = users => {\r\n//     return {\r\n//         type: SEARCH_USERS,\r\n//         users\r\n//     };\r\n// };\r\n\r\n// /**Clear search results */\r\n// export const clearSearchUsers = () => {\r\n//     return {\r\n//         type: CLEAR_SEARCH_USERS\r\n//     };\r\n// };\r\n\r\n/**ATTRACTIONS ACTIONS\r\n * - get attractions for homepage\r\n * - get attraction details\r\n */\r\n\r\n/**Get attractions for homepage\r\n * - get attractions for four main classifications to be displayed on homepage: music, sports, film, arts & theatre\r\n * - call getAttractions class method for each classification and add to attractions object to be added to redux store\r\n */\r\nexport const getAttractions = () => {\r\n    return async dispatch => {\r\n        try {\r\n        let attractions = {}\r\n            const musicRes = await TMApi.getAttractions('music');\r\n            const sportsRes = await TMApi.getAttractions('sports');\r\n            const filmRes = await TMApi.getAttractions('film');\r\n            const artsAndTheatreRes = await TMApi.getAttractions('arts&theatre');\r\n\r\n        attractions.music = musicRes._embedded.attractions\r\n        attractions.sports = sportsRes._embedded.attractions\r\n        attractions.films = filmRes._embedded.attractions\r\n        attractions.artsAndTheatre = artsAndTheatreRes._embedded.attractions\r\n        \r\n        dispatch(gotAttractions(attractions))\r\n        } catch (e) {\r\n            console.log(e)\r\n            return e\r\n        };\r\n    };\r\n};\r\n\r\nconst gotAttractions = attractions => {\r\n    return {\r\n        type: GET_ATTRACTIONS,\r\n        attractions\r\n    };\r\n};\r\n\r\n/**Get attraction details\r\n * - using attraction id, call TMApi class method to get attraction details\r\n */\r\nexport const getAttractionDetails = id => {\r\n    return async dispatch => {\r\n        const res = await TMApi.getAttractionDetails(id);\r\n        dispatch(gotAttractionDetails(res));\r\n    };\r\n};\r\n\r\nconst gotAttractionDetails = (attractionDetails=null) => {\r\n    return {\r\n        type: GET_ATTRACTION_DETAILS,\r\n        attractionDetails\r\n    };\r\n};","/**Card displayed on homepage that shows attraction name, image and event count\r\n * - rendered by AttractionCardList\r\n */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AttractionCard = ({ name, img, id, eventCount }) => {\r\n   \r\n    return (\r\n        <div className='relative w-full h-28 sm:h-44 md:h-32 xl:h-48'>\r\n            <Link to={`/attraction/${id}`}>\r\n                <img src={img} alt={`${name}`} className='h-full w-full rounded object-cover' />\r\n                <div className='absolute bottom-0 bg-gray-900 bg-opacity-40 text-white rounded ml-2 mb-2 p-2'>\r\n                    <p className='font-semibold text-sm sm:text-base'>{name}</p>\r\n                    <p className='text-xs sm:text-sm'>{eventCount} events</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttractionCard;","/**Groups top attractions per classification on homepage\r\n * - displays title of classification and link to events\r\n */\r\n\r\nimport React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { searchEvents } from '../actions/actionCreators';\r\nimport AttractionCard from './AttractionCard';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst AttractionCardList = ({ title, attractions }) => {\r\n    // const dispatch = useDispatch();\r\n    // const navigate = useNavigate();\r\n\r\n    // const handleSeeAll = title => {\r\n    //     if (title === 'Arts & Theatre') title = 'arts&theatre';\r\n    //     dispatch(searchEvents({classificationName: title.toLowerCase()}));\r\n    //     history.push({\r\n    //         pathname: '/search',\r\n    //         search: `?classificationName=${title.toLowerCase()}`\r\n    //     });   \r\n    // };\r\n\r\n    return (\r\n        <div className='w-full flex flex-col items-center'>\r\n            <div>\r\n                <div className='mb-4 text-xl'>\r\n                    <h3 className='font-bold'>{title}</h3>\r\n                </div>\r\n                <div className='grid grid-cols-2 gap-2 md:grid-cols-4'>\r\n                    {attractions.map(a => (\r\n                                <AttractionCard \r\n                                    name={a.name} \r\n                                    img={a.images[1].url} \r\n                                    eventCount={a.upcomingEvents._total}\r\n                                    id={a.id}\r\n                                    key={a.id}\r\n                                />\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttractionCardList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FavoriteArtistsHome = ({ artists }) => {\r\n    return (\r\n        <div className='w-full flex flex-col'>\r\n            <div>\r\n                <div className='mb-4 text-xl'>\r\n                    <h3 className='font-bold'>My Artists</h3>\r\n                </div>\r\n                <div className='w-full md:grid md:grid-cols-2 md:gap-2'>\r\n                    {artists.map(a => (\r\n                        <Link to={`/attraction/${a.id}`} key={a.id}>\r\n                            <div className='w-full border rounded flex items-center justify-between mb-2 py-2 px-2 hover:bg-gray-100'>\r\n                                <div className='flex items-center'>\r\n                                    <div className=''>\r\n                                        <img alt={a.name} src={a.photoUrl} className='w-16 rounded mr-4 md:mr-10'/>\r\n                                    </div>\r\n                                    <div className='pr-4'>\r\n                                        <p className='text-sm sm:text-base font-semibold'>{a.name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavoriteArtistsHome;","/**Homepage\r\n * - renders AttractionCardList\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\nimport { getUser, getAttractions } from '../actions/actionCreators';\r\nimport AttractionCardList from './AttractionCardList';\r\nimport FavoriteArtistsHome from './FavoriteArtistsHome';\r\nimport EventsSearchResultsHome from './EventSearchResultsHome';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const attractions = useSelector(store => store.attractionsReducer.attractionsHome);\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const storedToken = localStorage.getItem('token') || null;\r\n\r\n    useEffect(() => {\r\n        if (storedToken) {\r\n          dispatch(getUser(storedToken));\r\n        };\r\n        // getLocation()\r\n        dispatch(getAttractions());\r\n      }, [storedToken, dispatch, user.loggedIn]);\r\n\r\n    return (\r\n        <div className='flex justify-center w-full'>\r\n            <div className='px-3 flex flex-col lg:w-5/6 xl:w-2/3'>\r\n                \r\n                    {Object.keys(attractions).map(a => (\r\n                        <div key={a} className='mb-10 w-full'>\r\n                            <AttractionCardList title={attractions[a].title} attractions={attractions[a].attractions} />\r\n                        </div>\r\n                    ))}\r\n                \r\n                    {user.artists ? \r\n                        user.artists.length ?\r\n                            <div className='mb-10 w-full'>\r\n                                <FavoriteArtistsHome artists={user.artists}/>\r\n                            </div> :\r\n                            null :\r\n                        null\r\n                    } \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","/**Register form */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createUser } from '../actions/actionCreators';\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    let timeout\r\n\r\n    const INITIAL_STATE = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        usernameError: '',\r\n        passwordError: '',\r\n        firstNameError: '',\r\n        lastNameError: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    useEffect(() => {\r\n        if (user.loggedIn) {\r\n            navigate('/')\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [user.loggedIn, navigate, timeout])\r\n\r\n    const validateForm = () => {\r\n        let validForm = true\r\n        if (!formData.email) {\r\n          setFormData(data => ({\r\n            ...data, usernameError: 'Email cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n          setFormData(data => ({\r\n            ...data, usernameError: ''\r\n          }))\r\n        }\r\n        if (!formData.password) {\r\n          setFormData(data => ({\r\n            ...data, passwordError: 'Password cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, passwordError: ''\r\n            }))\r\n        }\r\n        if (!formData.firstName) {\r\n          setFormData(data => ({\r\n            ...data, firstNameError: 'First name cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, firstNameError: ''\r\n            }))\r\n        }\r\n        if (!formData.lastName) {\r\n          setFormData(data => ({\r\n            ...data, lastNameError: 'Last name cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, lastNameError: ''\r\n            }))\r\n        }\r\n        return validForm\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFormData(data => ({...data, [name]: value}));\r\n    };\r\n\r\n    const checkCredentials = () => {\r\n        timeout = setTimeout(() => {\r\n            if (!user.loggedIn) {\r\n                setFormData(data => ({\r\n                    ...data, usernameError: 'There is already an account using this email address'\r\n                }))\r\n            } \r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        let isValidForm = validateForm()\r\n        if (isValidForm) {\r\n            dispatch(createUser(\r\n                {\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    firstName: formData.firstName,\r\n                    lastName: formData.lastName\r\n                }\r\n            ));   \r\n            checkCredentials();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full sm:w-3/4 md:w-1/2 lg:w-5/12 xl:w-1/3'>\r\n                <div className='border border-gray-300 shadow-lg rounded bg-white px-10 py-14'>\r\n                    <h1 className='text-2xl font-semibold'>Almost There!</h1>\r\n                    <h3 className='text mb-10 text-gray-700'>Sign up with EventFinder and stay up to date with what's going on around you. </h3>\r\n                    <h5 className='text-sm mb-10 text-gray-700'>Already a member?  \r\n                        <span className='text-blue-500 font-semibold'>\r\n                            <Link to='/login'> Login</Link>\r\n                        </span>\r\n                    </h5>\r\n                    <form onSubmit={handleSubmit} className=''>\r\n                        <div className='mb-5'>\r\n                            <label htmlFor='email' className='block text-sm text-gray-700 mb-1'>Email Address</label>\r\n                            <input \r\n                                type='text' \r\n                                name='email' \r\n                                id='email'\r\n                                maxLength='25' \r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.usernameError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.usernameError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <label htmlFor='password' className='block text-sm text-gray-700 mb-1'>Password</label>\r\n                            <input \r\n                                type='password' \r\n                                name='password' \r\n                                id='password'\r\n                                maxLength='25' \r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.passwordError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.passwordError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='sm:grid sm:grid-cols-2 sm:gap-8'>\r\n                            <div className='mb-3'>\r\n                                <label htmlFor='firstName' className='block text-sm text-gray-700 mb-1'>First Name</label>\r\n                                <input \r\n                                    type='text' \r\n                                    name='firstName' \r\n                                    id='firstName'\r\n                                    maxLength='25' \r\n                                    value={formData.firstName}\r\n                                    onChange={handleChange}\r\n                                    className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                                {formData.firstNameError ? \r\n                                    <p className='text-xs text-red-500 mt-1'>{formData.firstNameError}</p> :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <label htmlFor='lastName' className='block text-sm text-gray-700 mb-1'>Last Name</label>\r\n                                <input \r\n                                    type='text' \r\n                                    name='lastName' \r\n                                    id='lastName'\r\n                                    maxLength='25' \r\n                                    value={formData.lastName}\r\n                                    onChange={handleChange}\r\n                                    className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                                {formData.lastNameError ? \r\n                                    <p className='text-xs text-red-500 mt-1'>{formData.lastNameError}</p> :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                            <button\r\n                                className='text-white uppercase tracking-wider bg-blue-500 mt-4 py-3 rounded w-full hover:bg-blue-600  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-blue-500 focus:ring-opacity-50 active:bg-blue-600' >\r\n                                    Sign Up\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegisterForm","import React from 'react';\r\n\r\nconst FavoriteArtistsProfile = ({artists, handleUnfollow}) => { \r\n    return (\r\n        <>\r\n        {artists ?\r\n            <div className='sm:px-3'>\r\n                <h2 className='text-2xl font-semibold mb-10'>My Artists</h2>\r\n                {artists.length ?\r\n                    artists.map(a => (\r\n                    <div key={a.id} className='border-b flex items-center justify-between py-4 px-1 hover:bg-gray-100'>\r\n                        <div className='flex items-center'>\r\n                            <div className=''>\r\n                                <img alt={a.name} src={a.photoUrl} className='w-16 md:w-24 rounded mr-4 md:mr-10'/>\r\n                            </div>\r\n                            <div className='pr-4'>\r\n                                <p className='text-sm sm:text-base font-semibold'>{a.name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={() => handleUnfollow(a.id)} className='text-sm text-red-500 hover:underline'>\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )) :\r\n                <h4 className='italic text-gray-800'>You haven't added any artists yet! You can click the heart icon on an artist's page to keep up to date with their events.</h4>\r\n                }\r\n            </div> :\r\n        null\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FavoriteArtistsProfile;","/**User profile\r\n * - displays:\r\n *      - basic user info\r\n *      - friends\r\n *      - artists following\r\n * - links to edit profile, view/find friends, view artists following\r\n */\r\n\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeArtist } from '../actions/actionCreators';\r\nimport FavoriteArtistsProfile from './FavoriteArtistsProfile';\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const artists = user.artists;\r\n\r\n    const handleUnfollow = id => {\r\n        dispatch(removeArtist({\r\n            id: id,\r\n            username: user.email\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full md:w-4/5 lg:w-4/6 xl:w-3/5'>\r\n                <FavoriteArtistsProfile artists={artists} handleUnfollow={handleUnfollow}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","/**Card that displays basic event info\r\n * - name\r\n * - venue\r\n * - date/time\r\n * - 'get tickets' button\r\n */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AttractionCardSmall = ({ name, segment, genre, img, id }) => {\r\n\r\n    return (\r\n        <Link to={`/attraction/${id}`}>\r\n            <div className='border-b flex items-center hover:bg-gray-200 py-4'>\r\n                <div className='mr-10'>\r\n                    <img src={img} alt={name} className='w-20'/>\r\n                </div>\r\n                <div>\r\n                    <p className='font-semibold'>{name}</p>\r\n                    <p className='text-gray-500 text-sm'>{segment} / {genre}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default AttractionCardSmall;","/**Search results for events\r\n * - shown when searching using search bar and when viewing attraction details\r\n * - renders EventCards\r\n */\r\n\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import { loadMore, searchEvents } from '../actions/actionCreators';\r\n// import { useLocation } from 'react-router-dom';\r\n// import queryString from 'query-string';\r\nimport AttractionCardSmall from './AttractionCardSmall';\r\n// import SearchFilters from './SearchFilters';\r\n\r\nconst AttractionSearchResults = ({attractionId, attractionName}) => {\r\n    // const dispatch = useDispatch();\r\n    const searchResults = useSelector(store => store.searchReducer);\r\n    const attractions = searchResults.attractions\r\n\r\n    \r\n    // const { search } = useLocation();\r\n    // const { location, keyword, classificationName } = queryString.parse(search);\r\n\r\n    // useEffect(() => {\r\n    //     if (!attractionId) {\r\n    //         if (events.length === 0) dispatch(searchEvents(queryString.parse(search)));\r\n    //     };\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n        {attractions ?\r\n            attractions.map(a => (\r\n                <div key={a.id}>\r\n                    <AttractionCardSmall \r\n                        name={a.name}\r\n                        segment={a.classifications[0].segment ? a.classifications[0].segment.name : null}\r\n                        genre={a.classifications[0].genre ? a.classifications[0].genre.name : null}\r\n                        img={a.images[0].url}\r\n                        id={a.id}\r\n                    />\r\n                </div>\r\n            )) :\r\n            <p>Couldn't find anything matching your search.</p>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AttractionSearchResults;","/**Card that displays basic event info\r\n * - name\r\n * - venue\r\n * - date/time\r\n * - 'get tickets' button\r\n */\r\n\r\nimport React from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nconst EventCard = ({ name, id, img, date, time, venue, ticketUrl}) => {\r\n\r\n    return (\r\n        <div className='border-b flex justify-between py-4 px-2 hover:bg-gray-100'>\r\n            <div className='flex flex-col md:flex-row'>\r\n                <div className='mr-10 flex items-baseline md:flex-col md:w-28'>\r\n                    <p className='text-indigo-600 font-semibold mr-3 uppercase'>{dayjs(date).format('MMM D')}</p>\r\n                    <p className='text-gray-500'>{dayjs(`${date} ${time}`).format('ddd h:mm a')}</p>\r\n                </div>\r\n                <div className='pr-2'>\r\n                    <p className='font-semibold'>{name}</p>\r\n                    <p className='text-gray-500 text-sm'>{venue}</p>\r\n                </div>\r\n            </div>\r\n            <div className='mt-1'>\r\n                <a href={ticketUrl} target='_blank' rel='noreferrer'>\r\n                    <button className='bg-blue-600 px-6 py-2 tracking-wider rounded text-white hover:bg-blue-800'>Tickets</button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventCard;","/**Search results for events\r\n * - shown when searching using search bar and when viewing attraction details\r\n * - renders EventCards\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadMore, searchEvents } from '../actions/actionCreators';\r\nimport { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport EventCard from './EventCard';\r\n\r\nconst EventSearchResults = ({attractionId, attractionName}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const searchResults = useSelector(store => store.searchReducer);\r\n    const events = searchResults.events;\r\n\r\n    let loadMoreLink\r\n    searchResults.link ?  loadMoreLink = searchResults.link.href : loadMoreLink = null\r\n    const { search } = useLocation();\r\n    const { location, keyword } = queryString.parse(search);\r\n\r\n    useEffect(() => {\r\n        if (!attractionId) {\r\n            if (events.length === 0) dispatch(searchEvents(queryString.parse(search)));\r\n        };\r\n    }, [attractionId, dispatch, events.length, search])\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(loadMore(loadMoreLink));\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {events ? \r\n            <div className=''>\r\n                \r\n                {attractionName &&\r\n                    <p className='mb-10 font-semibold text-xl'>\r\n                        Upcoming Events for {attractionName}\r\n                    </p>\r\n                }\r\n                {events.length === 0 ? \r\n                    <div>\r\n                        {keyword || location ? \r\n                        <p>Unfortunately, there are no upcoming events for {keyword} matching your criteria.</p> :\r\n                        <p>Unfortunately, there are no upcoming events for this artist.</p>\r\n                        }\r\n                    </div> :\r\n                    <>\r\n                    {events.map(e => (\r\n                    <div key={e.id}>\r\n                        <EventCard \r\n                            name={e.name} \r\n                            date={e.dates.start.localDate}\r\n                            time={e.dates.start.localTime}\r\n                            img={e.images[2].url}\r\n                            id={e.id}\r\n                            ticketUrl={e.url}\r\n                            venue={e._embedded ? e._embedded.venues[0].name : null}\r\n                        />\r\n                    </div>\r\n                    ))}\r\n                    </>\r\n                }\r\n                {loadMoreLink &&\r\n                <div className='flex justify-center'>\r\n                    <div className='flex justify-center w-1/2 my-10'>\r\n                        <button onClick={handleLoadMore} className='w-full py-2 px-4 border border-blue-600 rounded hover:bg-blue-600 hover:text-white'>Load More</button>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div> :\r\n            null\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventSearchResults;","import React, { useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport AttractionSearchResults from './AttractionSearchResults';\r\nimport EventSearchResults from './EventSearchResults';\r\n\r\nconst SearchResults = () => {\r\n    const [activeLink, setActiveLink] = useState('attractions');\r\n    const { search } = useLocation();\r\n    let { keyword } = queryString.parse(search);\r\n\r\n    const handleAttractionsClick = () => {\r\n        setActiveLink('attractions')\r\n    }\r\n\r\n    const handleEventsClick = () => {\r\n        setActiveLink('events')\r\n    }\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='lg:w-3/5'>\r\n                <div className='text-2xl mb-8'>\r\n                    <p>Searching for <span className='font-semibold text-indigo-700'>\"{keyword}\"</span></p>\r\n                </div>\r\n                <div className='flex text-xl'>\r\n                    <button onClick={handleAttractionsClick} className={`mb-8 mr-6 py-2 ${activeLink === 'attractions' ? 'border-b-4 border-blue-500' : 'border-b-4 border-transparent'}`}>Attractions</button>\r\n                    <button onClick={handleEventsClick} className={`mb-8 py-2 ${activeLink === 'events' ? 'border-b-4 border-blue-500' : 'border-b-4 border-transparent'}`}>Events</button>\r\n                </div>\r\n                <div>\r\n                    {activeLink === 'attractions' ? \r\n                        <AttractionSearchResults /> :\r\n                        <EventSearchResults />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchResults;","/**Details for an attraction to be shown on attraction page\r\n * - name\r\n * - genre\r\n * - faux rating\r\n * - follow button\r\n * - image\r\n * - event results\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAttractionDetails, searchEvents, addArtist, removeArtist } from '../actions/actionCreators';\r\nimport EventSearchResults from './EventSearchResults';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faHeart as faHeartRegular} from '@fortawesome/free-regular-svg-icons'\r\nimport {faHeart as faHeartSolid} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AttractionDetail = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { attractionId } = useParams();\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const attraction = useSelector(store => store.attractionsReducer.details);\r\n    const user = useSelector(store => store.userReducer.user);\r\n\r\n    // const checkIfFollowing = () => {\r\n    //     if (user.loggedIn) setIsFollowing(user.artists.map(a => a.id).includes(attractionId));\r\n    // };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAttractionDetails(attractionId));\r\n        dispatch(searchEvents({attractionId}));\r\n        if (user.loggedIn) setIsFollowing(user.artists.map(a => a.id).includes(attractionId));\r\n    }, [attractionId, dispatch, user.loggedIn, user.artists, attraction.details]);\r\n\r\n    const handleFollow = () => {\r\n        if (user.loggedIn) {\r\n            dispatch(addArtist({\r\n                id: attractionId,\r\n                name: attraction.name,\r\n                photoUrl: attraction.images[2].url,\r\n                username: user.email\r\n            }));\r\n            setIsFollowing(true);\r\n        } else {\r\n            navigate('/login')\r\n        }            \r\n    };\r\n\r\n    const handleUnfollow = () => {\r\n        dispatch(removeArtist({\r\n            id: attractionId,\r\n            username: user.email\r\n        }));\r\n        setIsFollowing(false);\r\n    };\r\n\r\n    const renderFollowButton = () => (\r\n        isFollowing ? \r\n        <div className='flex ml-1'>\r\n            <button onClick={handleUnfollow} className='mr-2'>\r\n                <FontAwesomeIcon icon={faHeartSolid} className='text-xl text-red-500'/>\r\n            </button>\r\n            <p className='text-sm text-gray-400 italic'>Following</p>\r\n        </div> :\r\n        <div className='flex ml-1'>\r\n            <button onClick={handleFollow} className='mr-2'>\r\n                <FontAwesomeIcon icon={faHeartRegular} className='text-xl text-gray-700'/>\r\n            </button> \r\n            <p className='text-sm text-gray-400'>Follow</p>\r\n        </div>\r\n    );\r\n    \r\n    return (\r\n    <>\r\n    {attraction ?\r\n        <div className='flex justify-center px-3'>\r\n            <div className='flex flex-col items-center md:w-4/5 lg:w-3/5'>\r\n                <div className='sm:grid sm:grid-cols-2 w-full'>\r\n                    <div className='sm:order-last lg:flex lg:justify-end'>\r\n                            {attraction.images ?\r\n                                <img alt={attraction.name} className='rounded mb-4 w-full' src={attraction.images[2].url}/> :\r\n                                null\r\n                            }\r\n                    </div>\r\n                    <div>\r\n                        <p className='text-5xl mb-4'>{attraction.name}</p>\r\n                        {attraction.classifications ? \r\n                        <p className='mb-4 ml-1 text-xl text-gray-500'>\r\n                            {attraction.classifications[0].segment.name} / {attraction.classifications[0].genre.name}\r\n                        </p> :\r\n                        null\r\n                        }\r\n                        {renderFollowButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='w-full mt-10'>\r\n                    {attraction.id === attractionId ?\r\n                        <EventSearchResults attractionId={attraction.id} attractionName={attraction.name}/> :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div> :\r\n        <p>loading</p>\r\n    }\r\n    </>\r\n    );\r\n    \r\n};\r\n\r\nexport default AttractionDetail;","/**Filters to be shown when searching events\r\n * - rendered by SearchResults\r\n * - filters for date, classification, radius, sort by\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchEvents } from '../actions/actionCreators';\r\nimport dayjs from 'dayjs';\r\nimport queryString from 'query-string';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst EventFilters = ({ attractionId }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n    let { location, keyword, startDateTime, sort, radius, classificationName } = queryString.parse(search);\r\n    if (classificationName === 'arts') classificationName = 'arts&theatre';\r\n    \r\n    const INITIAL_STATE = {\r\n        startDateTime: startDateTime || dayjs().format(),\r\n        location: location || '',\r\n        classificationName: classificationName || 'all',\r\n        sort: sort || 'date,asc',\r\n        radius: radius || '50'\r\n    };\r\n    const [filterData, setFilterData] = useState(INITIAL_STATE);\r\n\r\n    // useEffect(() => {\r\n    //     setFilterData(INITIAL_STATE)\r\n    // }, [location, keyword, classificationName, startDateTime])\r\n\r\n    // const handleDateChange = date => {\r\n    //     const formattedDate = dayjs(date).format('YYYY-MM-DDTHH:mm:ss')\r\n    //     setFilterData(data => ({...data, startDateTime: formattedDate}));\r\n    // };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFilterData(data => ({...data, [name]: value}))\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        if (attractionId) {\r\n            dispatch(searchEvents({ \r\n                attractionId, \r\n                // sort: filterData.sort,\r\n                startDateTime: dayjs(filterData.startDateTime).format()}));\r\n        } else {\r\n            dispatch(searchEvents({\r\n                ...queryString.parse(search), \r\n                ...filterData, \r\n                classificationName: filterData.classificationName === 'all' ? '' : filterData.classificationName,\r\n                startDateTime: dayjs(filterData.startDateTime).format()}));\r\n            navigate({\r\n                pathname: '/discover',\r\n                search: `?location=${filterData.location || ''}&keyword=${keyword || ''}&startDateTime=${dayjs(filterData.startDateTime).format()}&classificationName=${filterData.classificationName}&sort=${filterData.sort}&radius=${filterData.radius}`\r\n            });\r\n        };\r\n    };\r\n    \r\n    return (\r\n        <div className='sm:w-1/2 xl:w-1/3'>\r\n            <form onSubmit={handleSubmit}>\r\n            <div className='flex flex-col'>\r\n                <div className='mb-2'>\r\n                    <input \r\n                        type='text'\r\n                        name='location'\r\n                        id='location'\r\n                        value={filterData.location}\r\n                        onChange={handleChange}\r\n                        placeholder='Enter city or zip'\r\n                        className='border-blue-500 rounded mb-2 w-full'\r\n                    />\r\n                    <input \r\n                        type='date'\r\n                        id='datePicker'\r\n                        name='startDateTime'\r\n                        value={filterData.startDateTime}\r\n                        onChange={handleChange}\r\n                        className='border-blue-500 rounded w-full'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className='bg-gray-200 px-3 py-2 rounded text-gray-700 text-sm ml-1'>Apply Filters</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventFilters;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EventSearchResults from './EventSearchResults';\r\nimport EventFilters from './EventFilters';\r\n\r\nconst Discover = () => {\r\n    const { search } = useLocation();\r\n    let { location, startDateTime, classificationName } = queryString.parse(search);\r\n\r\n    if (classificationName === 'arts') classificationName = 'arts & theater' \r\n\r\n    // const INITIAL_STATE = {\r\n    //     location: location || null,\r\n    //     startDateTime: startDateTime || null,\r\n    //     classificationName: classificationName \r\n    // }\r\n    // const [queries, setQueries] = useState(INITIAL_STATE)\r\n\r\n    const renderHeading = () => {\r\n        return (\r\n            <div className='text-2xl mb-10'>\r\n            <p className='inline'>Showing upcoming <span className='font-semibold text-indigo-700'>{classificationName}</span> events</p>\r\n            {location ? \r\n                <p className='inline'> near <span className='font-semibold text-indigo-700'>{location}</span></p> : \r\n                null\r\n            }\r\n            {startDateTime ?\r\n                <p className='inline'> starting <span className='font-semibold text-indigo-700'>{dayjs(startDateTime).format('MMM D YYYY')}</span></p> :\r\n                null\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='lg:w-3/5'>\r\n                <div>\r\n                    {renderHeading()}\r\n                </div>\r\n                <div className='mb-10'>\r\n                    <EventFilters />\r\n                </div>\r\n                <div>\r\n                    <EventSearchResults />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Discover;","/**Login form */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../actions/actionCreators';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    let timeout\r\n\r\n    const INITIAL_STATE = {\r\n        email: '',\r\n        password: '',\r\n        emailError: '',\r\n        passwordError: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    useEffect(() => {\r\n        if (user.loggedIn) {\r\n            navigate('/')\r\n        }\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [user.loggedIn, navigate, timeout])\r\n\r\n    const validateForm = () => {\r\n        let validForm = true\r\n        if (!formData.email) {\r\n          setFormData(data => ({\r\n            ...data, emailError: 'Email cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n          setFormData(data => ({\r\n            ...data, emailError: ''\r\n          }))\r\n        }\r\n        if (!formData.password) {\r\n          setFormData(data => ({\r\n            ...data, passwordError: 'Password cannot be blank'\r\n          }))\r\n          validForm = false\r\n        } else {\r\n            setFormData(data => ({\r\n              ...data, passwordError: ''\r\n            }))\r\n        }\r\n        return validForm\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        const {name, value} = evt.target;\r\n        setFormData(data => ({...data, [name]: value}));\r\n    };\r\n\r\n    const checkCredentials = () => {\r\n        timeout = setTimeout(() => {\r\n            if (!user.loggedIn) {\r\n                setFormData(data => ({\r\n                    ...data, emailError: 'Invalid email/password', passwordError: 'Invalid email/password'\r\n                }))\r\n            } \r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        let isValidForm = validateForm()\r\n        if (isValidForm) {\r\n            dispatch(loginUser(\r\n                {\r\n                    email: formData.email,\r\n                    password: formData.password\r\n                }\r\n            ));   \r\n            checkCredentials();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='flex justify-center px-3'>\r\n            <div className='w-full sm:w-3/4 md:w-1/2 lg:w-5/12 xl:w-1/3'>\r\n                <div className='border border-gray-300 shadow-lg rounded bg-white px-10 py-14'>\r\n                    <h1 className='text-2xl font-semibold'>Welcome Back!</h1>\r\n                    <h3 className='text mb-10 text-gray-700'>Sign in below and discover awesome events and artists nearby. </h3>\r\n                    <h5 className='text-sm mb-10 text-gray-700'>New to EventFinder?  \r\n                        <span className='text-blue-500 font-semibold'>\r\n                            <Link to='/register'> Sign up</Link>\r\n                        </span>\r\n                    </h5>\r\n                    <form onSubmit={handleSubmit} className=''>\r\n                        <div className='mb-5'>\r\n                            <label htmlFor='email' className='block text-sm text-gray-700 mb-1'>Email Address</label>\r\n                            <input \r\n                                type='text' \r\n                                name='email' \r\n                                id='email'\r\n                                maxLength='25' \r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.emailError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.emailError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <label htmlFor='password' className='block text-sm text-gray-700 mb-1'>Password</label>\r\n                            <input \r\n                                type='password' \r\n                                name='password' \r\n                                id='password'\r\n                                maxLength='25' \r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                className='w-full border-gray-300 rounded shadow-sm focus:border-blue-400 focus:ring-blue-500 focus:ring-opacity-50' />\r\n                            {formData.passwordError ? \r\n                                <p className='text-xs text-red-500 mt-1'>{formData.passwordError}</p> :\r\n                                null\r\n                            }\r\n                        </div>\r\n                            <button\r\n                                className='text-white uppercase tracking-wider bg-blue-500 mt-4 py-3 rounded w-full hover:bg-blue-600  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-blue-500 focus:ring-opacity-50 active:bg-blue-600' >\r\n                                    Login\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","/**App routes */\r\n\r\nimport React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport RegisterForm from './RegisterForm';\r\nimport Profile from './Profile';\r\nimport SearchResults from './SearchResults';\r\nimport AttractionDetail from './AttractionDetail';\r\nimport Discover from './Discover';\r\nimport LoginForm from './LoginForm';\r\n// import EditProfileForm from './EditProfileForm';\r\n// import ArtistsList from './ArtistsList';\r\n// import EventDetail from './EventDetail';\r\n\r\nconst RoutesComponent = () => {\r\n    return (    \r\n        <Routes>\r\n            <Route path='/login' element={<LoginForm />} />\r\n            <Route path='/register' element={<RegisterForm />} />\r\n            <Route path='/profile' element={<Profile />} />\r\n            <Route path='/attraction/:attractionId' element={<AttractionDetail />} />\r\n            <Route path='/search' element={<SearchResults />} />\r\n            <Route path='/discover' element={<Discover />}/>\r\n            <Route path='/' element={<Home />}/>\r\n        </Routes>    \r\n    );\r\n};\r\n\r\nexport default RoutesComponent;","/**Search bar rendered in Header\r\n * - allows searching by keyword and location\r\n *    - location can be city name or zipcode\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { searchEvents, searchAttractions } from '../actions/actionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faMagnifyingGlass} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Search = () => {\r\n    \r\n    const { search } = useLocation();\r\n    const { location, keyword } = queryString.parse(search);\r\n\r\n    const INITIAL_STATE = {\r\n    location: '',\r\n    keyword: ''\r\n    };\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n    setFormData({\r\n        location: location || '',\r\n        keyword: keyword || ''\r\n    })\r\n    }, [search, keyword, location])\r\n\r\n    const handleChange = evt => {\r\n    const {name, value} = evt.target\r\n    setFormData(data => ({...data, [name]: value}))\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        try {\r\n            dispatch(searchAttractions(formData));\r\n            dispatch(searchEvents(formData));\r\n            navigate({\r\n                pathname: '/search',\r\n                // search: `?location=${formData.location}&keyword=${formData.keyword}`,\r\n                search: `?keyword=${formData.keyword}`\r\n            });\r\n        } catch (e) {\r\n            console.log(e)\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='flex items-center'>\r\n                    <input \r\n                        type='text'\r\n                        placeholder='Search events and attractions'\r\n                        name='keyword'\r\n                        value={formData.keyword}\r\n                        onChange={handleChange}\r\n                        className='rounded bg-white placeholder-opacity-80 w-72 px-4 py-2 mr-3 lg:mr-2'\r\n                    />\r\n                    <button>\r\n                        <FontAwesomeIcon icon={faMagnifyingGlass} className='text-xl text-white'/>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","/**Header \r\n * - nav links\r\n * - renders search bar\r\n*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../actions/actionCreators';\r\nimport { searchEvents } from '../actions/actionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport Search from './Search';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const [navbarOpen, setNavbarOpen] = useState(false)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutUser());\r\n        navigate('/')\r\n    };\r\n\r\n    const renderUserLinks = () => {\r\n        if (user.loggedIn) {\r\n            return (\r\n                <>\r\n                <li className='nav-item px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <Link to='/profile'>\r\n                        <button className='font-semibold mr-4'>My Profile</button>\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <button onClick={handleLogout} className='font-semibold'>Logout</button>\r\n                </li>\r\n                </>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                {/* <Link to='/register'>\r\n                    <button className='mr-6 font-semibold'>Register</button>\r\n                </Link> */}\r\n                <li className='nav-item px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>\r\n                    <Link to='/login'>\r\n                        <button className='font-semibold'>Login</button>\r\n                    </Link>\r\n                </li>\r\n                </>\r\n            );\r\n        };\r\n    };\r\n\r\n    const navigate = useNavigate()\r\n    const handleClick = title => {\r\n        dispatch(searchEvents({classificationName: title}));\r\n        navigate({\r\n            pathname: '/discover',\r\n            search: `?classificationName=${title}`\r\n        });   \r\n    };\r\n    \r\n    return (\r\n        <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 lg:py-6 bg-blue-500 mb-3\">\r\n            <div className=\"container px-2 mx-auto flex flex-wrap items-center justify-between lg:px-0\">\r\n                <div className=\"w-full px-1 relative flex justify-between lg:px-0 lg:w-auto lg:static lg:block lg:justify-start lg:mr-6\">\r\n                    <Link\r\n                        to='/'\r\n                        className=\"font-semibold text-2xl italic leading-relaxed inline-block py-2 whitespace-nowrap text-white\"\r\n                    >\r\n                    EventFinder\r\n                    </Link>\r\n                    \r\n                    <button\r\n                        className=\"text-white cursor-pointer text-2xl leading-none px-1 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n                        type=\"button\"\r\n                        onClick={() => setNavbarOpen(!navbarOpen)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faBars}/>\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        \"flex-col flex-grow items-start lg:flex lg:flex-row lg:justify-between\" +\r\n                        (navbarOpen ? \" flex\" : \" hidden\")\r\n                    }\r\n                    id=\"example-navbar-danger\"\r\n                >\r\n                    <div className='lg:flex lg:flex-row'>\r\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n                            <Search/>\r\n                            <li className=\"nav-item lg:ml-6\">\r\n                                <button onClick={() => handleClick('music')} className='px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>Concerts</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button onClick={() => handleClick('sports')} className='px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>Sports</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button onClick={() => handleClick('arts&theatre')} className='px-2 py-2 flex items-center text-lg font-semibold leading-snug text-white hover:opacity-75'>Arts & Theater</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='lg:flex lg:flex-row'>\r\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n                            {renderUserLinks()}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                            \r\n                            \r\n                    \r\n                    \r\n                </div>\r\n            </div>  \r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='flex justify-center py-10 text-sm text-gray-600'>\r\n            <p>EventFinder 2021</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport RoutesComponent from './RoutesComponent';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst App = () => {\n  // const getLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(showPosition);\n  //   } else {\n  //     console.log('geolocation not supported')\n  //   }\n  // }\n\n  // const showPosition = pos => {\n  //   console.log(`latitude: ${pos.coords.latitude}, longitude: ${pos.coords.longitude}`)\n  // }\n\n  return (\n    <div className='flex flex-col min-h-screen'>\n      <div className='mb-10'>\n        <Header />\n      </div>  \n      <div className=''>\n        <RoutesComponent />\n      </div>\n      <div className='flex flex-grow' />\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**Search reducer handles searches of events and users\r\n * - events from search bar or attraction details\r\n * - event details\r\n * - users when searching users by usernames\r\n */\r\n\r\nimport { SEARCH_EVENTS, SEARCH_ATTRACTIONS, LOAD_MORE, GET_EVENT_DETAIL, SEARCH_USERS, CLEAR_SEARCH_USERS } from '../actions/actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    events: [],\r\n    link: '',\r\n    eventDetail: {},\r\n    attractions: [],\r\n    users: []\r\n};\r\n\r\nconst searchReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_EVENTS:\r\n            let events\r\n            action.searchResults._embedded ? events = action.searchResults._embedded.events : events = []\r\n            return {...state, events: events, link: action.searchResults._links.next}\r\n        case LOAD_MORE:\r\n            return {...state, events: [...state.events, ...action.results._embedded.events], link: action.results._links.next}\r\n        case GET_EVENT_DETAIL:\r\n            return {...state, eventDetail: action.eventDetail}\r\n        case SEARCH_ATTRACTIONS:\r\n            return {...state, attractions: action.searchAttractionsResults._embedded.attractions}\r\n        case SEARCH_USERS:\r\n            return {...state, users: action.users}\r\n        case CLEAR_SEARCH_USERS:\r\n            return {...state, users: []}\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default searchReducer;","/**Attractions reducer handles changes to attraction data in state\r\n * - main attractions shown on homepage\r\n * - attraction details shown on attraction detail page\r\n*/\r\n\r\nimport { GET_ATTRACTIONS, GET_ATTRACTION_DETAILS } from '../actions/actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    attractionsHome: {\r\n        music: {\r\n            title: 'Music',\r\n            attractions: []\r\n        },\r\n        sports: {\r\n            title: 'Sports',\r\n            attractions: []\r\n        },\r\n        films: {\r\n            title: 'Films',\r\n            attractions: []\r\n        },\r\n        artsAndTheatre: {\r\n            title: 'Arts & Theatre',\r\n            attractions: []\r\n        }\r\n    },\r\n    details: {}\r\n};\r\n\r\nconst attractionsReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case GET_ATTRACTIONS:\r\n            return {...state, \r\n                attractionsHome: {...state.attractionsHome,\r\n                    music: {...state.attractionsHome.music, attractions: action.attractions.music}, \r\n                    sports: {...state.attractionsHome.sports, attractions: action.attractions.sports}, \r\n                    films: {...state.attractionsHome.films, attractions: action.attractions.films},\r\n                    artsAndTheatre: {...state.attractionsHome.artsAndTheatre, attractions: action.attractions.artsAndTheatre}\r\n                }\r\n            };\r\n        case GET_ATTRACTION_DETAILS:\r\n                return {...state,\r\n                        details: action.attractionDetails\r\n                }\r\n        default:\r\n            return state    \r\n    };\r\n};\r\n\r\nexport default attractionsReducer;","/**User reducer handles all changes to user data in state\r\n * - username, first name, last name, email, photo url\r\n * - friends\r\n * - artists following\r\n * - is logged in\r\n */\r\n\r\nimport { \r\n    CREATE_USER, \r\n    GET_USER, \r\n    UPDATE_USER, \r\n    LOGIN_USER, \r\n    LOGOUT_USER, \r\n    ADD_ARTIST, \r\n    REMOVE_ARTIST, \r\n} from \"../actions/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\nuser: {\r\n    loggedIn: false,\r\n    artists: []\r\n}\r\n};\r\n\r\nconst userReducer = (state=INITIAL_STATE, action) => {\r\nswitch(action.type) {\r\n    case CREATE_USER:\r\n        return {...state, user: {...action.user, loggedIn: true}};\r\n    case LOGIN_USER:\r\n        return {...state, user: {...action.user, loggedIn: true}};\r\n    case GET_USER:\r\n        return {...state, user: {...action.user, loggedIn: true}};\r\n    case UPDATE_USER:\r\n        return {...state, \r\n            user: {\r\n                ...state.user,\r\n                firstName: action.user.firstName,\r\n                lastName: action.user.lastName,\r\n                email: action.user.email\r\n            }\r\n        };\r\n    case LOGOUT_USER:\r\n        return INITIAL_STATE;\r\n    case ADD_ARTIST:\r\n        return {...state, user: {...state.user, artists: [...state.user.artists, action.artist]}};\r\n    case REMOVE_ARTIST:\r\n        return {...state, user: {...state.user, artists: state.user.artists.filter(a => a.id !== action.id)}};\r\n    default:\r\n        return state\r\n};\r\n};\r\n\r\nexport default userReducer;","/**Combine reducers into single rootReducer */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\nimport attractionsReducer from './attractionsReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    searchReducer,\r\n    attractionsReducer,\r\n    userReducer\r\n});\r\n\r\nexport default rootReducer;","/**Scroll to top of page when path changes */\r\n\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './reducers/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <ScrollToTop />\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}